{"version":3,"file":"LanguageSelectorDropdown.js","sources":["../../../../libSrc/components/languageselector/LanguageSelectorDropdown/LanguageSelectorDropdown.tsx"],"sourcesContent":["import React, { useState } from 'react'\nimport Menu from '../../header/Menu/Menu.js'\nimport LanguageSelectorButton from '../LanguageSelectorButton/LanguageSelectorButton.js'\nimport classnames from 'classnames'\nimport type { LanguageSelectorProps } from '../LanguageSelector/LanguageSelector.js'\nimport { generateMenuItems } from '../utils.js'\n\nexport type LanguageSelectorDropdownProps = LanguageSelectorProps &\n  JSX.IntrinsicElements['div']\n\nconst LanguageSelectorDropdown = ({\n  label,\n  langs,\n  small,\n  className,\n  displayLang,\n  ...divProps\n}: LanguageSelectorDropdownProps) => {\n  const [isOpen, setIsOpen] = useState(false)\n\n  const classes = classnames(\n    'usa-language-container',\n    {\n      [`usa-language--small`]: small !== undefined,\n    },\n    className\n  )\n  const displayLabel = langs.find((langDef) => langDef.attr === displayLang)\n\n  return (\n    <div className={classes} data-testid=\"languageSelector\" {...divProps}>\n      <ul className=\"usa-language__primary usa-accordion\">\n        <li className=\"usa-language__primary-item\">\n          <LanguageSelectorButton\n            className={classes}\n            label={displayLabel?.label || label || langs[0].label}\n            isOpen={isOpen}\n            onToggle={() => setIsOpen((prevIsOpen) => !prevIsOpen)}\n          />\n          <Menu\n            items={generateMenuItems(langs)}\n            isOpen={isOpen}\n            id=\"language-options\"\n            type=\"language\"\n          />\n        </li>\n      </ul>\n    </div>\n  )\n}\n\nexport default LanguageSelectorDropdown\n"],"names":["LanguageSelectorDropdown","label","langs","small","className","displayLang","divProps","isOpen","setIsOpen","useState","classes","classnames","displayLabel","langDef","jsx","jsxs","LanguageSelectorButton","prevIsOpen","Menu","generateMenuItems"],"mappings":";;;;;;AAUA,MAAMA,IAA2B,CAAC;AAAA,EAChC,OAAAC;AAAA,EACA,OAAAC;AAAA,EACA,OAAAC;AAAA,EACA,WAAAC;AAAA,EACA,aAAAC;AAAA,EACA,GAAGC;AACL,MAAqC;AACnC,QAAM,CAACC,GAAQC,CAAS,IAAIC,EAAS,EAAK,GAEpCC,IAAUC;AAAA,IACd;AAAA,IACA;AAAA,MACG,uBAAwBR,MAAU;AAAA,IACrC;AAAA,IACAC;AAAA,EAAA,GAEIQ,IAAeV,EAAM,KAAK,CAACW,MAAYA,EAAQ,SAASR,CAAW;AAEzE,SACG,gBAAAS,EAAA,OAAA,EAAI,WAAWJ,GAAS,eAAY,oBAAoB,GAAGJ,GAC1D,UAAA,gBAAAQ,EAAC,QAAG,WAAU,uCACZ,UAAC,gBAAAC,EAAA,MAAA,EAAG,WAAU,8BACZ,UAAA;AAAA,IAAA,gBAAAD;AAAA,MAACE;AAAA,MAAA;AAAA,QACC,WAAWN;AAAA,QACX,QAAOE,KAAA,gBAAAA,EAAc,UAASX,KAASC,EAAM,CAAC,EAAE;AAAA,QAChD,QAAAK;AAAA,QACA,UAAU,MAAMC,EAAU,CAACS,MAAe,CAACA,CAAU;AAAA,MAAA;AAAA,IACvD;AAAA,IACA,gBAAAH;AAAA,MAACI;AAAA,MAAA;AAAA,QACC,OAAOC,EAAkBjB,CAAK;AAAA,QAC9B,QAAAK;AAAA,QACA,IAAG;AAAA,QACH,MAAK;AAAA,MAAA;AAAA,IACP;AAAA,EAAA,GACF,GACF,EACF,CAAA;AAEJ;"}