{"version":3,"file":"StepIndicator.js","sources":["../../../../libSrc/components/stepindicator/StepIndicator/StepIndicator.tsx"],"sourcesContent":["import React from 'react'\nimport classnames from 'classnames'\nimport type { StepIndicatorStepProps } from '../StepIndicatorStep/StepIndicatorStep.js'\nimport type { HeadingLevel } from '../../../types/headingLevel.js'\n\nexport type StepIndicatorProps = {\n  showLabels?: boolean\n  counters?: 'none' | 'default' | 'small'\n  centered?: boolean\n  children: React.ReactElement<StepIndicatorStepProps>[]\n  className?: string\n  divProps?: JSX.IntrinsicElements['div']\n  listProps?: JSX.IntrinsicElements['ol']\n  headingProps?: React.DetailedHTMLProps<\n    React.HTMLAttributes<HTMLHeadingElement>,\n    HTMLHeadingElement\n  >\n  headingLevel: HeadingLevel\n  stepText?: string\n  ofText?: string\n}\n\nconst StepIndicator = ({\n  showLabels = true,\n  counters = 'none',\n  centered = false,\n  children,\n  className,\n  divProps,\n  listProps,\n  headingProps,\n  headingLevel,\n  stepText = 'Step',\n  ofText = 'of',\n}: StepIndicatorProps): React.ReactElement => {\n  const Heading = headingLevel\n\n  const { className: additionalDivClasses, ...remainingDivProps } =\n    divProps || {}\n  const { className: additionalListClasses, ...remainingListProps } =\n    listProps || {}\n  const { className: additionalHeadingClasses, ...remainingHeadingProps } =\n    headingProps || {}\n\n  const divClasses = classnames(\n    'usa-step-indicator',\n    {\n      'usa-step-indicator--no-labels': !showLabels,\n      'usa-step-indicator--counters': counters === 'default',\n      'usa-step-indicator--counters-sm': counters === 'small',\n      'usa-step-indicator--center': centered,\n    },\n    className,\n    additionalDivClasses\n  )\n\n  const listClasses = classnames(\n    'usa-step-indicator__segments',\n    additionalListClasses\n  )\n\n  const headingClasses = classnames(\n    'usa-step-indicator__heading',\n    additionalHeadingClasses\n  )\n\n  const findCurrentStepIndex = (): number => {\n    const i = children.findIndex((step) => step.props.status === 'current')\n    return i === -1 ? 0 : i\n  }\n  const currentStepIndex = findCurrentStepIndex()\n  const currentStepNumber = currentStepIndex + 1\n  const currentStepLabel = children[parseInt(`${currentStepIndex}`)].props.label\n  const totalNumberOfSteps = children.length\n\n  return (\n    <div\n      className={divClasses}\n      data-testid=\"step-indicator\"\n      aria-label=\"progress\"\n      {...remainingDivProps}>\n      <ol className={listClasses} {...remainingListProps}>\n        {children}\n      </ol>\n      <div className=\"usa-step-indicator__header\">\n        <Heading className={headingClasses} {...remainingHeadingProps}>\n          <span className=\"usa-step-indicator__heading-counter\">\n            <span className=\"usa-sr-only\" data-testid=\"step-text\">\n              {stepText}\n            </span>\n            <span className=\"usa-step-indicator__current-step\">\n              {currentStepNumber}\n            </span>\n            &nbsp;\n            <span className=\"usa-step-indicator__total-steps\">{`${ofText} ${totalNumberOfSteps}`}</span>\n            &nbsp;\n          </span>\n          <span className=\"usa-step-indicator__heading-text\">\n            {currentStepLabel}\n          </span>\n        </Heading>\n      </div>\n    </div>\n  )\n}\n\nexport default StepIndicator\n"],"names":["StepIndicator","showLabels","counters","centered","children","className","divProps","listProps","headingProps","headingLevel","stepText","ofText","Heading","additionalDivClasses","remainingDivProps","additionalListClasses","remainingListProps","additionalHeadingClasses","remainingHeadingProps","divClasses","classnames","listClasses","headingClasses","currentStepIndex","i","step","currentStepNumber","currentStepLabel","totalNumberOfSteps","jsxs","jsx"],"mappings":";;AAsBA,MAAMA,IAAgB,CAAC;AAAA,EACrB,YAAAC,IAAa;AAAA,EACb,UAAAC,IAAW;AAAA,EACX,UAAAC,IAAW;AAAA,EACX,UAAAC;AAAA,EACA,WAAAC;AAAA,EACA,UAAAC;AAAA,EACA,WAAAC;AAAA,EACA,cAAAC;AAAA,EACA,cAAAC;AAAA,EACA,UAAAC,IAAW;AAAA,EACX,QAAAC,IAAS;AACX,MAA8C;AAC5C,QAAMC,IAAUH,GAEV,EAAE,WAAWI,GAAsB,GAAGC,EAAkB,IAC5DR,KAAY,IACR,EAAE,WAAWS,GAAuB,GAAGC,EAAmB,IAC9DT,KAAa,IACT,EAAE,WAAWU,GAA0B,GAAGC,EAAsB,IACpEV,KAAgB,IAEZW,IAAaC;AAAA,IACjB;AAAA,IACA;AAAA,MACE,iCAAiC,CAACnB;AAAA,MAClC,gCAAgCC,MAAa;AAAA,MAC7C,mCAAmCA,MAAa;AAAA,MAChD,8BAA8BC;AAAA,IAChC;AAAA,IACAE;AAAA,IACAQ;AAAA,EAAA,GAGIQ,IAAcD;AAAA,IAClB;AAAA,IACAL;AAAA,EAAA,GAGIO,IAAiBF;AAAA,IACrB;AAAA,IACAH;AAAA,EAAA,GAOIM,KAJuB,MAAc;AACnC,UAAAC,IAAIpB,EAAS,UAAU,CAACqB,MAASA,EAAK,MAAM,WAAW,SAAS;AAC/D,WAAAD,MAAM,KAAK,IAAIA;AAAA,EAAA,MAGlBE,IAAoBH,IAAmB,GACvCI,IAAmBvB,EAAS,SAAS,GAAGmB,CAAgB,EAAE,CAAC,EAAE,MAAM,OACnEK,IAAqBxB,EAAS;AAGlC,SAAA,gBAAAyB;AAAA,IAAC;AAAA,IAAA;AAAA,MACC,WAAWV;AAAA,MACX,eAAY;AAAA,MACZ,cAAW;AAAA,MACV,GAAGL;AAAA,MACJ,UAAA;AAAA,QAAA,gBAAAgB,EAAC,MAAG,EAAA,WAAWT,GAAc,GAAGL,GAC7B,UAAAZ,GACH;AAAA,QACA,gBAAA0B,EAAC,SAAI,WAAU,8BACb,4BAAClB,GAAQ,EAAA,WAAWU,GAAiB,GAAGJ,GACtC,UAAA;AAAA,UAAC,gBAAAW,EAAA,QAAA,EAAK,WAAU,uCACd,UAAA;AAAA,YAAA,gBAAAC,EAAC,QAAK,EAAA,WAAU,eAAc,eAAY,aACvC,UACHpB,GAAA;AAAA,YACC,gBAAAoB,EAAA,QAAA,EAAK,WAAU,oCACb,UACHJ,GAAA;AAAA,YAAO;AAAA,YAEP,gBAAAI,EAAC,UAAK,WAAU,mCAAmC,aAAGnB,CAAM,IAAIiB,CAAkB,GAAG,CAAA;AAAA,YAAO;AAAA,UAAA,GAE9F;AAAA,UACC,gBAAAE,EAAA,QAAA,EAAK,WAAU,oCACb,UACHH,GAAA;AAAA,QAAA,EAAA,CACF,EACF,CAAA;AAAA,MAAA;AAAA,IAAA;AAAA,EAAA;AAGN;"}