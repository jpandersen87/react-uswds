{"version":3,"file":"Accordion.js","sources":["../../../../libSrc/components/accordion/Accordion/Accordion.tsx"],"sourcesContent":["import React, { useState } from 'react'\nimport classnames from 'classnames'\nimport AccordionItem, {\n  type AccordionItemProps,\n} from '../AccordionItem/AccordionItem.js'\n\nexport type AccordionProps = {\n  bordered?: boolean\n  multiselectable?: boolean\n  items: AccordionItemProps[]\n  className?: string\n} & JSX.IntrinsicElements['div']\n\nconst Accordion = ({\n  bordered,\n  items,\n  className,\n  multiselectable = false,\n  ...props\n}: AccordionProps): React.ReactElement => {\n  const [openItems, setOpenState] = useState(\n    items.filter((i) => !!i.expanded).map((i) => i.id)\n  )\n\n  const classes = classnames(\n    'usa-accordion',\n    {\n      'usa-accordion--bordered': bordered,\n    },\n    className\n  )\n\n  const toggleItem = (itemId: AccordionItemProps['id']): void => {\n    const newOpenItems = [...openItems]\n    const itemIndex = openItems.indexOf(itemId)\n    const isMultiselectable = multiselectable\n\n    if (itemIndex > -1) {\n      newOpenItems.splice(itemIndex, 1)\n    } else {\n      if (isMultiselectable) {\n        newOpenItems.push(itemId)\n      } else {\n        newOpenItems.splice(0, newOpenItems.length)\n        newOpenItems.push(itemId)\n      }\n    }\n    setOpenState(newOpenItems)\n  }\n\n  return (\n    <div\n      className={classes}\n      data-testid=\"accordion\"\n      data-allow-multiple={multiselectable || undefined}\n      {...props}>\n      {items.map((item, i) => (\n        <AccordionItem\n          key={`accordionItem_${i}`}\n          {...item}\n          expanded={openItems.indexOf(item.id) > -1}\n          handleToggle={(): void => {\n            toggleItem(item.id)\n          }}\n        />\n      ))}\n    </div>\n  )\n}\n\nexport default Accordion\n"],"names":["Accordion","bordered","items","className","multiselectable","props","openItems","setOpenState","useState","i","classes","classnames","toggleItem","itemId","newOpenItems","itemIndex","isMultiselectable","jsx","item","AccordionItem"],"mappings":";;;;AAaA,MAAMA,IAAY,CAAC;AAAA,EACjB,UAAAC;AAAA,EACA,OAAAC;AAAA,EACA,WAAAC;AAAA,EACA,iBAAAC,IAAkB;AAAA,EAClB,GAAGC;AACL,MAA0C;AAClC,QAAA,CAACC,GAAWC,CAAY,IAAIC;AAAA,IAChCN,EAAM,OAAO,CAACO,MAAM,CAAC,CAACA,EAAE,QAAQ,EAAE,IAAI,CAACA,MAAMA,EAAE,EAAE;AAAA,EAAA,GAG7CC,IAAUC;AAAA,IACd;AAAA,IACA;AAAA,MACE,2BAA2BV;AAAA,IAC7B;AAAA,IACAE;AAAA,EAAA,GAGIS,IAAa,CAACC,MAA2C;AACvD,UAAAC,IAAe,CAAC,GAAGR,CAAS,GAC5BS,IAAYT,EAAU,QAAQO,CAAM,GACpCG,IAAoBZ;AAE1B,IAAIW,IAAY,KACDD,EAAA,OAAOC,GAAW,CAAC,KAE5BC,KAGWF,EAAA,OAAO,GAAGA,EAAa,MAAM,GAC1CA,EAAa,KAAKD,CAAM,IAG5BN,EAAaO,CAAY;AAAA,EAAA;AAIzB,SAAA,gBAAAG;AAAA,IAAC;AAAA,IAAA;AAAA,MACC,WAAWP;AAAA,MACX,eAAY;AAAA,MACZ,uBAAqBN,KAAmB;AAAA,MACvC,GAAGC;AAAA,MACH,UAAMH,EAAA,IAAI,CAACgB,GAAMT,MAChB,gBAAAQ;AAAA,QAACE;AAAA,QAAA;AAAA,UAEE,GAAGD;AAAA,UACJ,UAAUZ,EAAU,QAAQY,EAAK,EAAE,IAAI;AAAA,UACvC,cAAc,MAAY;AACxB,YAAAN,EAAWM,EAAK,EAAE;AAAA,UACpB;AAAA,QAAA;AAAA,QALK,iBAAiBT,CAAC;AAAA,MAAA,CAO1B;AAAA,IAAA;AAAA,EAAA;AAGP;"}