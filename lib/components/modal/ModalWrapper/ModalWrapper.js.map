{"version":3,"file":"ModalWrapper.js","sources":["../../../../libSrc/components/modal/ModalWrapper/ModalWrapper.tsx"],"sourcesContent":["import React, { forwardRef } from 'react'\nimport classnames from 'classnames'\n\nexport type ModalWrapperProps = {\n  id: string\n  children: React.ReactNode\n  isVisible: boolean\n  forceAction: boolean\n  handleClose: () => void\n  className?: string\n} & JSX.IntrinsicElements['div']\n\nexport const ModalWrapperForwardRef: React.ForwardRefRenderFunction<\n  HTMLDivElement,\n  ModalWrapperProps\n> = (\n  { id, children, isVisible, forceAction, className, handleClose, ...divProps },\n  ref\n): React.ReactElement => {\n  const classes = classnames(\n    'usa-modal-wrapper',\n    {\n      'is-visible': isVisible,\n      'is-hidden': !isVisible,\n    },\n    className\n  )\n\n  /* eslint-disable jsx-a11y/click-events-have-key-events */\n  /* eslint-disable jsx-a11y/no-static-element-interactions */\n  return (\n    <div ref={ref} id={id} className={classes} role=\"dialog\" {...divProps}>\n      <div\n        data-testid=\"modalOverlay\"\n        className=\"usa-modal-overlay\"\n        onClick={forceAction ? undefined : handleClose}\n        aria-controls={id}>\n        {children}\n      </div>\n    </div>\n  )\n}\n\nconst ModalWrapper = forwardRef(ModalWrapperForwardRef)\n\nexport default ModalWrapper\n"],"names":["ModalWrapperForwardRef","id","children","isVisible","forceAction","className","handleClose","divProps","ref","classes","classnames","jsx","ModalWrapper","forwardRef"],"mappings":";;;AAYO,MAAMA,IAGT,CACF,EAAE,IAAAC,GAAI,UAAAC,GAAU,WAAAC,GAAW,aAAAC,GAAa,WAAAC,GAAW,aAAAC,GAAa,GAAGC,EAAS,GAC5EC,MACuB;AACvB,QAAMC,IAAUC;AAAA,IACd;AAAA,IACA;AAAA,MACE,cAAcP;AAAA,MACd,aAAa,CAACA;AAAA,IAChB;AAAA,IACAE;AAAA,EAAA;AAMA,SAAA,gBAAAM,EAAC,SAAI,KAAAH,GAAU,IAAAP,GAAQ,WAAWQ,GAAS,MAAK,UAAU,GAAGF,GAC3D,UAAA,gBAAAI;AAAA,IAAC;AAAA,IAAA;AAAA,MACC,eAAY;AAAA,MACZ,WAAU;AAAA,MACV,SAASP,IAAc,SAAYE;AAAA,MACnC,iBAAeL;AAAA,MACd,UAAAC;AAAA,IAAA;AAAA,EAEL,EAAA,CAAA;AAEJ,GAEMU,IAAeC,EAAWb,CAAsB;"}