{"version":3,"file":"Modal.js","sources":["../../../../libSrc/components/modal/Modal/Modal.tsx"],"sourcesContent":["import React, {\n  useEffect,\n  useState,\n  useRef,\n  forwardRef,\n  useImperativeHandle,\n} from 'react'\nimport FocusTrap from 'focus-trap-react'\n\nimport { useModal, getScrollbarWidth } from '../utils.js'\nimport ModalWindow from '../ModalWindow/ModalWindow.js'\nimport ModalWrapper from '../ModalWrapper/ModalWrapper.js'\nimport ReactDOM from 'react-dom'\n\nexport interface ModalComponentProps {\n  id: string\n  children: React.ReactNode\n  className?: string\n  isLarge?: boolean\n  forceAction?: boolean\n  modalRoot?: string\n  renderToPortal?: boolean\n  isInitiallyOpen?: boolean\n}\n\nexport type ModalProps = ModalComponentProps & JSX.IntrinsicElements['div']\n\nexport type ModalRef = {\n  modalId: string\n  modalIsOpen: boolean\n  toggleModal: (event?: React.MouseEvent, open?: boolean) => boolean\n}\n\n// Modals are rendered into the document body default. If an element exists with the id\n// `modal-root`, that element will be used as the parent instead.\n//\n// If you wish to override this behavior, `renderToPortal` to `false` and the modal\n// will render in its normal location in the document. Note that this may cause the modal to\n// be inaccessible due to no longer being in the document's accessibility tree.\nexport const ModalForwardRef: React.ForwardRefRenderFunction<\n  ModalRef,\n  ModalProps\n> = (\n  {\n    id,\n    children,\n    isLarge = false,\n    forceAction = false,\n    modalRoot = '.usa-modal-wrapper',\n    renderToPortal = true,\n    isInitiallyOpen,\n    ...divProps\n  },\n  ref\n): React.ReactElement => {\n  const { isOpen, toggleModal } = useModal(isInitiallyOpen)\n  const [mounted, setMounted] = useState(false)\n  const initialPaddingRef = useRef<string>()\n  const tempPaddingRef = useRef<string>()\n  const modalEl = useRef<HTMLDivElement>(null)\n\n  const modalRootSelector = modalRoot || '.usa-modal-wrapper'\n\n  const NON_MODALS = `body > *:not(${modalRootSelector}):not([aria-hidden])`\n  const NON_MODALS_HIDDEN = `[data-modal-hidden]`\n\n  const closeModal = (e?: React.MouseEvent) => {\n    toggleModal(e, false)\n  }\n\n  useImperativeHandle(\n    ref,\n    () => ({\n      modalId: id,\n      modalIsOpen: isOpen,\n      toggleModal,\n    }),\n    [id, isOpen]\n  )\n\n  const handleOpenEffect = () => {\n    const { body } = document\n    body.style.paddingRight = tempPaddingRef.current || ''\n    body.classList.add('usa-js-modal--active')\n\n    document.querySelectorAll(NON_MODALS).forEach((el) => {\n      el.setAttribute('aria-hidden', 'true')\n      el.setAttribute('data-modal-hidden', '')\n    })\n\n    if (forceAction) {\n      body.classList.add('usa-js-no-click')\n    }\n  }\n\n  const handleCloseEffect = () => {\n    const { body } = document\n    body.style.paddingRight = initialPaddingRef.current || ''\n    body.classList.remove('usa-js-modal--active')\n    body.classList.remove('usa-js-no-click')\n\n    document.querySelectorAll(NON_MODALS_HIDDEN).forEach((el) => {\n      el.removeAttribute('aria-hidden')\n      el.removeAttribute('data-modal-hidden')\n    })\n  }\n\n  useEffect(() => {\n    const SCROLLBAR_WIDTH = getScrollbarWidth()\n    const INITIAL_PADDING =\n      window\n        .getComputedStyle(document.body)\n        .getPropertyValue('padding-right') || '0px'\n\n    const TEMPORARY_PADDING = `${\n      parseInt(INITIAL_PADDING.replace(/px/, ''), 10) +\n      parseInt(SCROLLBAR_WIDTH.replace(/px/, ''), 10)\n    }px`\n\n    initialPaddingRef.current = INITIAL_PADDING\n    tempPaddingRef.current = TEMPORARY_PADDING\n\n    setMounted(true)\n\n    return () => {\n      // Reset as if the modal is being closed\n      handleCloseEffect()\n    }\n  }, [])\n\n  useEffect(() => {\n    if (mounted) {\n      if (isOpen === true) {\n        handleOpenEffect()\n      } else if (isOpen === false) {\n        handleCloseEffect()\n      }\n    }\n  }, [isOpen])\n\n  const ariaLabelledBy = divProps['aria-labelledby']\n  const ariaDescribedBy = divProps['aria-describedby']\n\n  if (!ariaLabelledBy) {\n    console.error(`${id} is missing aria-labelledby attribute`)\n  }\n  if (!ariaDescribedBy) {\n    console.error(`${id} is missing aria-describedby attribute`)\n  }\n\n  delete divProps['aria-labelledby']\n  delete divProps['aria-describedby']\n\n  const initialFocus = () => {\n    const focusEl = modalEl.current?.querySelector('[data-focus]') as\n      | HTMLElement\n      | SVGElement\n\n    return focusEl ? focusEl : modalEl.current || false\n  }\n\n  const focusTrapOptions = {\n    initialFocus,\n    escapeDeactivates: (): boolean => {\n      if (forceAction) return false\n\n      closeModal()\n      return true\n    },\n  }\n\n  const modal = (\n    <FocusTrap active={isOpen} focusTrapOptions={focusTrapOptions}>\n      <ModalWrapper\n        role=\"dialog\"\n        id={id}\n        aria-labelledby={ariaLabelledBy}\n        aria-describedby={ariaDescribedBy}\n        data-force-action={forceAction}\n        isVisible={isOpen}\n        handleClose={closeModal}\n        forceAction={forceAction}>\n        <ModalWindow\n          modalId={id}\n          ref={modalEl}\n          isLarge={isLarge}\n          forceAction={forceAction}\n          tabIndex={-1}\n          handleClose={closeModal}\n          {...divProps}>\n          {children}\n        </ModalWindow>\n      </ModalWrapper>\n    </FocusTrap>\n  )\n\n  if (renderToPortal) {\n    const modalRoot = document.getElementById('modal-root')\n    const target = modalRoot || document.body\n    return ReactDOM.createPortal(modal, target)\n  } else {\n    return modal\n  }\n}\n\nconst Modal = forwardRef(ModalForwardRef)\n\nexport default Modal\n"],"names":["ModalForwardRef","id","children","isLarge","forceAction","modalRoot","renderToPortal","isInitiallyOpen","divProps","ref","isOpen","toggleModal","useModal","mounted","setMounted","useState","initialPaddingRef","useRef","tempPaddingRef","modalEl","NON_MODALS","NON_MODALS_HIDDEN","closeModal","useImperativeHandle","handleOpenEffect","body","el","handleCloseEffect","useEffect","SCROLLBAR_WIDTH","getScrollbarWidth","INITIAL_PADDING","TEMPORARY_PADDING","ariaLabelledBy","ariaDescribedBy","modal","jsx","FocusTrap","focusEl","_a","ModalWrapper","ModalWindow","target","ReactDOM","Modal","forwardRef"],"mappings":"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"}