{"version":3,"file":"utils.js","sources":["../../../libSrc/components/Link/utils.ts"],"sourcesContent":["import classnames from 'classnames'\nimport type {\n  DefaultLinkProps,\n  CustomLinkProps,\n  StyledLinkProps,\n} from './Link.js'\n\nexport function isCustomProps<T>(\n  props: DefaultLinkProps | CustomLinkProps<T>\n): props is CustomLinkProps<T> {\n  return 'asCustom' in props\n}\n// keyboard handler for 'link as a button'\nexport const handleKeyDown = (e: React.KeyboardEvent) => {\n  if (e.key === ' ' && e.target) {\n    e.preventDefault()\n    ;(e.target as HTMLElement).click()\n  }\n}\n\nexport function linkClasses<T>(\n  variant: StyledLinkProps<T>['variant'],\n  className: StyledLinkProps<T>['className']\n): string | undefined {\n  const unstyled = variant === 'unstyled'\n  const isExternalLink = variant === 'external'\n  const isNavLink = variant === 'nav'\n\n  return unstyled\n    ? className\n    : classnames(\n        'usa-link',\n        { 'usa-link--external': isExternalLink, 'usa-nav__link': isNavLink },\n        className\n      )\n}\n"],"names":["isCustomProps","props","handleKeyDown","e","linkClasses","variant","className","classnames"],"mappings":";AAOO,SAASA,EACdC,GAC6B;AAC7B,SAAO,cAAcA;AACvB;AAEa,MAAAC,IAAgB,CAACC,MAA2B;AACvD,EAAIA,EAAE,QAAQ,OAAOA,EAAE,WACrBA,EAAE,eAAe,GACfA,EAAE,OAAuB;AAE/B;AAEgB,SAAAC,EACdC,GACAC,GACoB;AAKpB,SAJiBD,MAAY,aAKzBC,IACAC;AAAA,IACE;AAAA,IACA,EAAE,sBAPeF,MAAY,YAOW,iBAN5BA,MAAY,MAM2C;AAAA,IACnEC;AAAA,EAAA;AAER;"}