{"version":3,"file":"Grid.js","sources":["../../../../libSrc/components/grid/Grid/Grid.tsx"],"sourcesContent":["import React from 'react'\nimport classnames from 'classnames'\n\nimport type { GridItemProps, BreakpointKeys } from '../types.js'\nimport { getGridClasses, isCustomProps } from './utils.js'\nimport { breakpoints } from '../constants.js'\n\nexport type GridBreakpointProps = GridItemProps & {\n  [P in BreakpointKeys]?: GridItemProps\n}\n\nexport type BaseGridProps<T> = GridBreakpointProps & {\n  className?: string\n} & T\n\nexport type GridLayoutProps = {\n  gridLayout?: GridBreakpointProps\n}\n\nexport interface WithCustomGridProps<T> {\n  asCustom: React.FunctionComponent<T>\n}\n\nexport type DefaultGridProps = BaseGridProps<JSX.IntrinsicElements['div']>\n\nexport type CustomGridProps<T> = BaseGridProps<React.PropsWithChildren<T>> &\n  WithCustomGridProps<React.PropsWithChildren<T>>\n\nexport type GridProps<T = DefaultGridProps> =\n  | DefaultGridProps\n  | CustomGridProps<T>\n\nexport type omittedProps =\n  | 'mobile'\n  | 'tablet'\n  | 'desktop'\n  | 'widescreen'\n  | 'mobileLg'\n  | 'tabletLg'\n  | 'desktopLg'\n  | 'children'\n  | 'className'\n  | 'row'\n  | 'col'\n  | 'gap'\n  | 'offset'\n\nexport default function Grid(props: DefaultGridProps): React.ReactElement\nexport default function Grid<T>(props: CustomGridProps<T>): React.ReactElement\nexport default function Grid<FCProps = DefaultGridProps>(\n  props: GridProps<FCProps>\n): React.ReactElement {\n  const {\n    children,\n    className,\n    row,\n    col,\n    gap,\n    offset,\n    mobile,\n    mobileLg,\n    tablet,\n    tabletLg,\n    desktop,\n    desktopLg,\n    widescreen,\n    ...otherProps\n  } = props\n\n  const itemProps = {\n    row,\n    col,\n    gap,\n    offset,\n  }\n\n  const breakpointProps = {\n    mobile,\n    mobileLg,\n    tablet,\n    tabletLg,\n    desktop,\n    desktopLg,\n    widescreen,\n  }\n\n  let classes = getGridClasses(itemProps)\n\n  Object.keys(breakpoints).forEach((b) => {\n    const bp = b as BreakpointKeys\n    if (Object.prototype.hasOwnProperty.call(breakpointProps, bp)) {\n      // eslint-disable-next-line security/detect-object-injection\n      const bpProps = props[bp] as GridItemProps\n      classes = classnames(classes, getGridClasses(bpProps, bp))\n    }\n  })\n\n  classes = classnames(classes, className)\n\n  if (isCustomProps(otherProps)) {\n    const { asCustom, ...remainingProps } = otherProps\n\n    const gridProps: FCProps = remainingProps as unknown as FCProps\n    return React.createElement(\n      asCustom,\n      {\n        className: classes,\n        ...gridProps,\n      },\n      children\n    )\n  } else {\n    return (\n      <div className={classes} data-testid=\"grid\" {...otherProps}>\n        {children}\n      </div>\n    )\n  }\n}\n"],"names":["Grid","props","children","className","row","col","gap","offset","mobile","mobileLg","tablet","tabletLg","desktop","desktopLg","widescreen","otherProps","itemProps","breakpointProps","classes","getGridClasses","breakpoints","b","bp","bpProps","classnames","isCustomProps","asCustom","remainingProps","gridProps","React","jsx"],"mappings":";;;;;AAiDA,SAAwBA,EACtBC,GACoB;AACd,QAAA;AAAA,IACJ,UAAAC;AAAA,IACA,WAAAC;AAAA,IACA,KAAAC;AAAA,IACA,KAAAC;AAAA,IACA,KAAAC;AAAA,IACA,QAAAC;AAAA,IACA,QAAAC;AAAA,IACA,UAAAC;AAAA,IACA,QAAAC;AAAA,IACA,UAAAC;AAAA,IACA,SAAAC;AAAA,IACA,WAAAC;AAAA,IACA,YAAAC;AAAA,IACA,GAAGC;AAAA,EACD,IAAAd,GAEEe,IAAY;AAAA,IAChB,KAAAZ;AAAA,IACA,KAAAC;AAAA,IACA,KAAAC;AAAA,IACA,QAAAC;AAAA,EAAA,GAGIU,IAAkB;AAAA,IACtB,QAAAT;AAAA,IACA,UAAAC;AAAA,IACA,QAAAC;AAAA,IACA,UAAAC;AAAA,IACA,SAAAC;AAAA,IACA,WAAAC;AAAA,IACA,YAAAC;AAAA,EAAA;AAGE,MAAAI,IAAUC,EAAeH,CAAS;AAalC,MAXJ,OAAO,KAAKI,CAAW,EAAE,QAAQ,CAACC,MAAM;AACtC,UAAMC,IAAKD;AACX,QAAI,OAAO,UAAU,eAAe,KAAKJ,GAAiBK,CAAE,GAAG;AAEvD,YAAAC,IAAUtB,EAAMqB,CAAE;AACxB,MAAAJ,IAAUM,EAAWN,GAASC,EAAeI,GAASD,CAAE,CAAC;AAAA,IAC3D;AAAA,EAAA,CACD,GAESJ,IAAAM,EAAWN,GAASf,CAAS,GAEnCsB,EAAcV,CAAU,GAAG;AAC7B,UAAM,EAAE,UAAAW,GAAU,GAAGC,EAAA,IAAmBZ,GAElCa,IAAqBD;AAC3B,WAAOE,EAAM;AAAA,MACXH;AAAA,MACA;AAAA,QACE,WAAWR;AAAA,QACX,GAAGU;AAAA,MACL;AAAA,MACA1B;AAAA,IAAA;AAAA,EACF;AAGE,WAAA,gBAAA4B,EAAC,SAAI,WAAWZ,GAAS,eAAY,QAAQ,GAAGH,GAC7C,UAAAb,EACH,CAAA;AAGN;"}