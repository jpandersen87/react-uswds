{"version":3,"file":"RangeInput.js","sources":["../../../../libSrc/components/forms/RangeInput/RangeInput.tsx"],"sourcesContent":["import React, { useState } from 'react'\nimport classnames from 'classnames'\n\nexport type RangeInputProps = {\n  id: string\n  name: string\n  min?: number\n  max?: number\n  textPreposition?: string\n  textUnit?: string\n  inputRef?:\n    | string\n    | ((instance: HTMLInputElement | null) => void)\n    | React.RefObject<HTMLInputElement>\n    | null\n    | undefined\n} & JSX.IntrinsicElements['input']\n\nconst RangeInput = ({\n  className,\n  inputRef,\n  textPreposition,\n  textUnit,\n  ...inputProps\n}: RangeInputProps): React.ReactElement => {\n  const classes = classnames('usa-range', className)\n  // input range defaults to min = 0, max = 100, step = 1, and value = (max/2) if not specified.\n  const defaultMin = 0\n  const defaultMax = 100\n  const defaultVal = Math.round(defaultMax / 2)\n  const defaultUnit = ''\n  const defaultPreposition = 'of'\n  const {\n    min,\n    max,\n    defaultValue,\n    value: valueProp,\n    ...remainingInputProps\n  } = inputProps\n  const rangeMin = min || defaultMin\n  const rangeMax = max || defaultMax\n  const rangeUnit = textUnit || defaultUnit\n  const rangePreposition = textPreposition || defaultPreposition\n  const rangeValue =\n    valueProp !== undefined\n      ? valueProp\n      : defaultValue !== undefined\n        ? defaultValue\n        : defaultVal\n  const [value, setValue] = useState(rangeValue)\n  const callout = `${value} ${rangeUnit} ${rangePreposition} ${rangeMax}`\n\n  return (\n    <input\n      data-testid=\"range\"\n      aria-valuetext={callout}\n      className={classes}\n      ref={inputRef}\n      type=\"range\"\n      {...remainingInputProps}\n      min={rangeMin}\n      max={rangeMax}\n      value={value}\n      onChange={(e) => setValue(Number(e.target.value))}\n    />\n  )\n}\n\nexport default RangeInput\n"],"names":["RangeInput","className","inputRef","textPreposition","textUnit","inputProps","classes","classnames","defaultMin","defaultMax","defaultVal","defaultUnit","defaultPreposition","min","max","defaultValue","valueProp","remainingInputProps","rangeMin","rangeMax","rangeUnit","rangePreposition","rangeValue","value","setValue","useState","callout","jsx","e"],"mappings":";;;AAkBA,MAAMA,IAAa,CAAC;AAAA,EAClB,WAAAC;AAAA,EACA,UAAAC;AAAA,EACA,iBAAAC;AAAA,EACA,UAAAC;AAAA,EACA,GAAGC;AACL,MAA2C;AACnC,QAAAC,IAAUC,EAAW,aAAaN,CAAS,GAE3CO,IAAa,GACbC,IAAa,KACbC,IAAa,KAAK,MAAMD,IAAa,CAAC,GACtCE,IAAc,IACdC,IAAqB,MACrB;AAAA,IACJ,KAAAC;AAAA,IACA,KAAAC;AAAA,IACA,cAAAC;AAAA,IACA,OAAOC;AAAA,IACP,GAAGC;AAAA,EACD,IAAAZ,GACEa,IAAWL,KAAOL,GAClBW,IAAWL,KAAOL,GAClBW,IAAYhB,KAAYO,GACxBU,IAAmBlB,KAAmBS,GACtCU,IACJN,MAAc,SACVA,IACAD,MAAiB,SACfA,IACAL,GACF,CAACa,GAAOC,CAAQ,IAAIC,EAASH,CAAU,GACvCI,IAAU,GAAGH,CAAK,IAAIH,CAAS,IAAIC,CAAgB,IAAIF,CAAQ;AAGnE,SAAA,gBAAAQ;AAAA,IAAC;AAAA,IAAA;AAAA,MACC,eAAY;AAAA,MACZ,kBAAgBD;AAAA,MAChB,WAAWpB;AAAA,MACX,KAAKJ;AAAA,MACL,MAAK;AAAA,MACJ,GAAGe;AAAA,MACJ,KAAKC;AAAA,MACL,KAAKC;AAAA,MACL,OAAAI;AAAA,MACA,UAAU,CAACK,MAAMJ,EAAS,OAAOI,EAAE,OAAO,KAAK,CAAC;AAAA,IAAA;AAAA,EAAA;AAGtD;"}