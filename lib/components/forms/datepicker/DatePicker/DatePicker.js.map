{"version":3,"file":"DatePicker.js","sources":["../../../../../libSrc/components/forms/datepicker/DatePicker/DatePicker.tsx"],"sourcesContent":["import React, {\n  useState,\n  useEffect,\n  useRef,\n  type FocusEvent,\n  type FormEvent,\n  type KeyboardEvent,\n} from 'react'\nimport classnames from 'classnames'\n\nimport {\n  DEFAULT_EXTERNAL_DATE_FORMAT,\n  VALIDATION_MESSAGE,\n  DEFAULT_MIN_DATE,\n} from '../constants.js'\nimport { type DatePickerLocalization, EN_US } from '../i18n.js'\nimport {\n  formatDate,\n  parseDateString,\n  isDateInvalid,\n  today,\n  keepDateBetweenMinAndMax,\n  isSameDay,\n  addDays,\n} from '../utils.js'\nimport Calendar from '../Calendar/Calendar.js'\nimport type { ValidationStatus } from '../../../../types/validationStatus.js'\nimport { FocusMode } from '../../../../utils/constants.js'\n\nexport type BaseDatePickerProps = {\n  id: string\n  name: string\n  className?: string\n  validationStatus?: ValidationStatus\n  disabled?: boolean\n  required?: boolean\n  defaultValue?: string\n  minDate?: string\n  maxDate?: string\n  rangeDate?: string\n  onChange?: (val?: string) => void\n  onBlur?: (\n    event: React.FocusEvent<HTMLInputElement> | React.FocusEvent<HTMLDivElement>\n  ) => void\n  i18n?: DatePickerLocalization\n}\n\nexport type DatePickerProps = BaseDatePickerProps &\n  Omit<JSX.IntrinsicElements['input'], 'onChange'>\n\nconst DatePicker = ({\n  id,\n  name,\n  className,\n  validationStatus,\n  defaultValue,\n  disabled,\n  required,\n  minDate = DEFAULT_MIN_DATE,\n  maxDate,\n  rangeDate,\n  onChange,\n  onBlur,\n  i18n = EN_US,\n  ...inputProps\n}: DatePickerProps): React.ReactElement => {\n  const datePickerEl = useRef<HTMLDivElement>(null)\n  const externalInputEl = useRef<HTMLInputElement>(null)\n\n  const isError = validationStatus === 'error'\n  const isSuccess = validationStatus === 'success'\n\n  const [internalValue, setInternalValue] = useState('')\n  const [externalValue, setExternalValue] = useState('')\n  const [showCalendar, setShowCalendar] = useState(false)\n  const [calendarDisplayValue, setCalendarDisplayValue] = useState<\n    Date | undefined\n  >(undefined)\n  const [calendarPosY, setCalendarPosY] = useState<number | undefined>(0)\n  const [statuses, setStatuses] = useState<string[]>([])\n  const [focusMode, setFocusMode] = useState<FocusMode>(FocusMode.None)\n  const [keydownKeyCode, setKeydownKeyCode] = useState<number | undefined>(\n    undefined\n  )\n\n  const parsedMinDate = parseDateString(minDate) as Date\n  const parsedMaxDate = maxDate ? parseDateString(maxDate) : undefined\n  const parsedRangeDate = rangeDate ? parseDateString(rangeDate) : undefined\n\n  const validateInput = (): void => {\n    const isInvalid = isDateInvalid(externalValue, parsedMinDate, parsedMaxDate)\n\n    if (isInvalid && !externalInputEl?.current?.validationMessage) {\n      externalInputEl?.current?.setCustomValidity(VALIDATION_MESSAGE)\n    }\n\n    if (\n      !isInvalid &&\n      externalInputEl?.current?.validationMessage === VALIDATION_MESSAGE\n    ) {\n      externalInputEl?.current?.setCustomValidity('')\n    }\n  }\n\n  const handleSelectDate = (dateString: string, closeCalendar = true): void => {\n    const parsedValue = parseDateString(dateString)\n    const formattedValue =\n      parsedValue && formatDate(parsedValue, DEFAULT_EXTERNAL_DATE_FORMAT)\n\n    if (parsedValue) setInternalValue(dateString)\n    if (formattedValue) setExternalValue(formattedValue)\n    if (onChange) onChange(formattedValue)\n\n    if (closeCalendar) {\n      setShowCalendar(false)\n      setStatuses([])\n      externalInputEl?.current?.focus()\n    }\n  }\n\n  const handleExternalInput = (event: FormEvent<HTMLInputElement>): void => {\n    // Keep external & internal input values in sync\n    const value = (event.target as HTMLInputElement).value\n    setExternalValue(value)\n    if (onChange) onChange(value)\n\n    const inputDate = parseDateString(value, DEFAULT_EXTERNAL_DATE_FORMAT, true)\n    let newValue = ''\n    if (inputDate && !isDateInvalid(value, parsedMinDate, parsedMaxDate)) {\n      newValue = formatDate(inputDate)\n    }\n\n    if (internalValue !== newValue) {\n      setInternalValue(newValue)\n    }\n\n    if (inputDate && showCalendar) {\n      const newCalendarDate = keepDateBetweenMinAndMax(\n        inputDate,\n        parsedMinDate,\n        parsedMaxDate\n      )\n      setCalendarDisplayValue(newCalendarDate)\n    }\n  }\n\n  useEffect(() => {\n    if (defaultValue) {\n      handleSelectDate(defaultValue, false)\n    }\n  }, [])\n\n  useEffect(() => {\n    // focus on selected date when open\n    if (showCalendar) {\n      const focusedDate =\n        datePickerEl.current &&\n        datePickerEl.current.querySelector<HTMLElement>(\n          '.usa-date-picker__calendar__date--focused'\n        )\n\n      if (focusedDate) {\n        focusedDate.focus()\n      }\n    }\n  }, [showCalendar])\n\n  useEffect(() => {\n    validateInput()\n  }, [externalValue, minDate, maxDate])\n\n  const handleToggleClick = (): void => {\n    if (showCalendar) {\n      // calendar is open, hide it\n      setStatuses([])\n    } else {\n      // calendar is closed, show it\n      const inputDate = parseDateString(\n        externalValue,\n        DEFAULT_EXTERNAL_DATE_FORMAT,\n        true\n      )\n\n      const displayDate = keepDateBetweenMinAndMax(\n        inputDate || (defaultValue && parseDateString(defaultValue)) || today(),\n        parsedMinDate,\n        parsedMaxDate\n      )\n\n      setCalendarDisplayValue(displayDate)\n      setCalendarPosY(datePickerEl?.current?.offsetHeight)\n\n      const statuses = i18n.statuses\n\n      const selectedDate = parseDateString(internalValue)\n      if (selectedDate && isSameDay(selectedDate, addDays(displayDate, 0))) {\n        const selectedDateText = i18n.selectedDate\n        statuses.unshift(selectedDateText)\n      }\n\n      setStatuses(statuses)\n    }\n\n    setShowCalendar(!showCalendar)\n  }\n\n  // This is why the DatePicker requires React 17\n  const handleFocusOut = (event: FocusEvent<HTMLDivElement>): void => {\n    if (!datePickerEl.current?.contains(event?.relatedTarget as Element)) {\n      if (showCalendar) {\n        setShowCalendar(false)\n        setStatuses([])\n      }\n\n      if (onBlur) onBlur(event)\n    }\n  }\n\n  const handleEscapeKey = (event: KeyboardEvent): void => {\n    if (event.key === 'Escape') {\n      if (showCalendar) {\n        setShowCalendar(false)\n        setStatuses([])\n        externalInputEl?.current?.focus()\n      }\n      event.preventDefault()\n    }\n  }\n\n  const handleCalendarKeydown = (event: KeyboardEvent): void => {\n    setKeydownKeyCode(event.keyCode)\n  }\n\n  const handleCalendarKeyup = (event: KeyboardEvent): void => {\n    if (event.keyCode !== keydownKeyCode) event.preventDefault()\n  }\n\n  const datePickerClasses = classnames(\n    'usa-date-picker',\n    'usa-date-picker--initialized',\n    {\n      'usa-date-picker--active': showCalendar,\n    },\n    className\n  )\n  const datePickerInputClasses = classnames(\n    'usa-input',\n    'usa-date-picker__external-input',\n    {\n      'usa-input--error': isError,\n      'usa-input--success': isSuccess,\n    }\n  )\n\n  const toggleCalendar = i18n.toggleCalendar\n\n  return (\n    // Ignoring error: \"Static HTML elements with event handlers require a role.\"\n    // Ignoring because this element does not have a role in the USWDS implementation (https://github.com/uswds/uswds/blob/develop/src/js/components/date-picker.js#L828)\n    // eslint-disable-next-line jsx-a11y/no-static-element-interactions\n    <div\n      data-testid=\"date-picker\"\n      className={datePickerClasses}\n      ref={datePickerEl}\n      onBlur={handleFocusOut}\n      onKeyDown={handleEscapeKey}>\n      <input\n        {...inputProps}\n        name={name}\n        data-testid=\"date-picker-internal-input\"\n        className=\"usa-input usa-sr-only usa-date-picker__internal-input\"\n        type=\"text\"\n        aria-hidden={true}\n        tabIndex={-1}\n        required={false}\n        disabled={false}\n        value={internalValue}\n        readOnly\n      />\n      <div className=\"usa-date-picker__wrapper\" tabIndex={-1}>\n        <input\n          {...inputProps}\n          id={id}\n          data-testid=\"date-picker-external-input\"\n          className={datePickerInputClasses}\n          type=\"text\"\n          disabled={disabled}\n          required={required}\n          value={externalValue}\n          ref={externalInputEl}\n          onInput={handleExternalInput}\n          onFocus={(): void => {\n            setFocusMode(FocusMode.Input)\n          }}\n          onBlur={(e): void => {\n            setFocusMode(FocusMode.None)\n            onBlur && onBlur(e)\n          }}\n        />\n        <button\n          data-testid=\"date-picker-button\"\n          type=\"button\"\n          className=\"usa-date-picker__button\"\n          aria-haspopup={true}\n          aria-label={toggleCalendar}\n          disabled={disabled}\n          onClick={handleToggleClick}></button>\n        {/* Ignoring error: \"Non-interactive elements should not be assigned mouse or keyboard event listeners.\" */}\n        {/* eslint-disable-next-line jsx-a11y/no-noninteractive-element-interactions */}\n        <div\n          data-testid=\"date-picker-calendar\"\n          className=\"usa-date-picker__calendar\"\n          role=\"application\"\n          hidden={!showCalendar}\n          data-value={calendarDisplayValue && formatDate(calendarDisplayValue)}\n          style={{ top: `${calendarPosY}px` }}\n          onKeyDown={handleCalendarKeydown}\n          onKeyUp={handleCalendarKeyup}>\n          {showCalendar && (\n            <Calendar\n              date={calendarDisplayValue}\n              handleSelectDate={handleSelectDate}\n              minDate={parsedMinDate}\n              maxDate={parsedMaxDate}\n              rangeDate={parsedRangeDate}\n              selectedDate={parseDateString(internalValue)}\n              setStatuses={setStatuses}\n              focusMode={focusMode}\n              i18n={i18n}\n            />\n          )}\n        </div>\n        <div\n          data-testid=\"date-picker-status\"\n          className=\"usa-sr-only usa-date-picker__status\"\n          role=\"status\"\n          aria-live=\"polite\">\n          {statuses.join('. ')}\n        </div>\n      </div>\n    </div>\n  )\n}\n\nDatePicker.defaultProps = {\n  minDate: DEFAULT_MIN_DATE,\n}\n\nexport default DatePicker\n"],"names":["DatePicker","id","name","className","validationStatus","defaultValue","disabled","required","minDate","DEFAULT_MIN_DATE","maxDate","rangeDate","onChange","onBlur","i18n","EN_US","inputProps","datePickerEl","useRef","externalInputEl","isError","isSuccess","internalValue","setInternalValue","useState","externalValue","setExternalValue","showCalendar","setShowCalendar","calendarDisplayValue","setCalendarDisplayValue","calendarPosY","setCalendarPosY","statuses","setStatuses","focusMode","setFocusMode","FocusMode","keydownKeyCode","setKeydownKeyCode","parsedMinDate","parseDateString","parsedMaxDate","parsedRangeDate","validateInput","isInvalid","isDateInvalid","_a","_b","VALIDATION_MESSAGE","_c","_d","handleSelectDate","dateString","closeCalendar","parsedValue","formattedValue","formatDate","DEFAULT_EXTERNAL_DATE_FORMAT","handleExternalInput","event","value","inputDate","newValue","newCalendarDate","keepDateBetweenMinAndMax","useEffect","focusedDate","handleToggleClick","displayDate","today","selectedDate","isSameDay","addDays","selectedDateText","handleFocusOut","handleEscapeKey","handleCalendarKeydown","handleCalendarKeyup","datePickerClasses","classnames","datePickerInputClasses","toggleCalendar","jsxs","jsx","Calendar"],"mappings":"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"}