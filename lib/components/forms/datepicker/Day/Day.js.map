{"version":3,"file":"Day.js","sources":["../../../../../libSrc/components/forms/datepicker/Day/Day.tsx"],"sourcesContent":["import React, { forwardRef, type KeyboardEvent } from 'react'\nimport classnames from 'classnames'\n\nimport { formatDate, isIosDevice } from '../utils.js'\n\nimport { type DatePickerLocalization, EN_US } from '../i18n.js'\n\nexport interface DayProps {\n  date: Date\n  onClick: (value: string) => void\n  onKeyDown: (event: KeyboardEvent) => void\n  onMouseMove: (hoverDate: Date) => void\n  isDisabled?: boolean\n  isSelected?: boolean\n  isFocused?: boolean\n  isPrevMonth?: boolean\n  isFocusedMonth?: boolean\n  isNextMonth?: boolean\n  isToday?: boolean\n  isRangeDate?: boolean\n  isRangeStart?: boolean\n  isRangeEnd?: boolean\n  isWithinRange?: boolean\n  i18n?: DatePickerLocalization\n}\n\nexport const DayForwardRef: React.ForwardRefRenderFunction<\n  HTMLButtonElement,\n  DayProps\n> = (\n  {\n    date,\n    onClick,\n    onKeyDown,\n    onMouseMove,\n    isDisabled = false,\n    isSelected = false,\n    isFocused = false,\n    isPrevMonth = false,\n    isFocusedMonth = false,\n    isNextMonth = false,\n    isToday = false,\n    isRangeDate = false,\n    isRangeStart = false,\n    isRangeEnd = false,\n    isWithinRange = false,\n    i18n = EN_US,\n  },\n  ref\n): React.ReactElement => {\n  const day = date.getDate()\n  const month = date.getMonth()\n  const year = date.getFullYear()\n  const dayOfWeek = date.getDay()\n\n  const formattedDate = formatDate(date)\n  const tabIndex = isFocused ? 0 : -1\n\n  const classes = classnames('usa-date-picker__calendar__date', {\n    'usa-date-picker__calendar__date--previous-month': isPrevMonth,\n    'usa-date-picker__calendar__date--current-month': isFocusedMonth,\n    'usa-date-picker__calendar__date--next-month': isNextMonth,\n    'usa-date-picker__calendar__date--selected': isSelected,\n    'usa-date-picker__calendar__date--today': isToday,\n    'usa-date-picker__calendar__date--focused': isFocused,\n    'usa-date-picker__calendar__date--range-date': isRangeDate,\n    'usa-date-picker__calendar__date--range-date-start': isRangeStart,\n    'usa-date-picker__calendar__date--range-date-end': isRangeEnd,\n    'usa-date-picker__calendar__date--within-range': isWithinRange,\n  })\n\n  const monthStr = i18n.months[parseInt(`${month}`)]\n  const dayStr = i18n.daysOfWeek[parseInt(`${dayOfWeek}`)]\n\n  const handleClick = (): void => {\n    onClick(formattedDate)\n  }\n\n  const handleKeyDown = (e: KeyboardEvent<HTMLButtonElement>): void => {\n    onKeyDown(e)\n  }\n\n  const handleMouseMove = (): void => {\n    if (isDisabled || isIosDevice()) return\n    onMouseMove(date)\n  }\n\n  return (\n    // Ignoring error: \"The attribute aria-selected is not supported by the role button. This role is implicit on the element button.\"\n    // Ignoring because this attribute is present in the USWDS implementation (https://github.com/uswds/uswds/blob/develop/src/js/components/date-picker.js#L1017)\n    // eslint-disable-next-line jsx-a11y/role-supports-aria-props\n    <button\n      type=\"button\"\n      data-testid=\"select-date\"\n      ref={ref}\n      onClick={handleClick}\n      tabIndex={tabIndex}\n      className={classes}\n      data-day={day}\n      data-month={month + 1}\n      data-year={year}\n      data-value={formattedDate}\n      aria-label={`${day} ${monthStr} ${year} ${dayStr}`}\n      aria-selected={isSelected ? true : false}\n      disabled={isDisabled}\n      onKeyDown={handleKeyDown}\n      onMouseMove={isFocusedMonth ? handleMouseMove : undefined}>\n      {day}\n    </button>\n  )\n}\n\nconst Day = forwardRef(DayForwardRef)\n\nexport default Day\n"],"names":["DayForwardRef","date","onClick","onKeyDown","onMouseMove","isDisabled","isSelected","isFocused","isPrevMonth","isFocusedMonth","isNextMonth","isToday","isRangeDate","isRangeStart","isRangeEnd","isWithinRange","i18n","EN_US","ref","day","month","year","dayOfWeek","formattedDate","formatDate","tabIndex","classes","classnames","monthStr","dayStr","handleClick","handleKeyDown","e","handleMouseMove","isIosDevice","jsx","Day","forwardRef"],"mappings":";;;;;AA0BO,MAAMA,IAGT,CACF;AAAA,EACE,MAAAC;AAAA,EACA,SAAAC;AAAA,EACA,WAAAC;AAAA,EACA,aAAAC;AAAA,EACA,YAAAC,IAAa;AAAA,EACb,YAAAC,IAAa;AAAA,EACb,WAAAC,IAAY;AAAA,EACZ,aAAAC,IAAc;AAAA,EACd,gBAAAC,IAAiB;AAAA,EACjB,aAAAC,IAAc;AAAA,EACd,SAAAC,IAAU;AAAA,EACV,aAAAC,IAAc;AAAA,EACd,cAAAC,IAAe;AAAA,EACf,YAAAC,IAAa;AAAA,EACb,eAAAC,IAAgB;AAAA,EAChB,MAAAC,IAAOC;AACT,GACAC,MACuB;AACjB,QAAAC,IAAMlB,EAAK,WACXmB,IAAQnB,EAAK,YACboB,IAAOpB,EAAK,eACZqB,IAAYrB,EAAK,UAEjBsB,IAAgBC,EAAWvB,CAAI,GAC/BwB,IAAWlB,IAAY,IAAI,IAE3BmB,IAAUC,EAAW,mCAAmC;AAAA,IAC5D,mDAAmDnB;AAAA,IACnD,kDAAkDC;AAAA,IAClD,+CAA+CC;AAAA,IAC/C,6CAA6CJ;AAAA,IAC7C,0CAA0CK;AAAA,IAC1C,4CAA4CJ;AAAA,IAC5C,+CAA+CK;AAAA,IAC/C,qDAAqDC;AAAA,IACrD,mDAAmDC;AAAA,IACnD,iDAAiDC;AAAA,EAAA,CAClD,GAEKa,IAAWZ,EAAK,OAAO,SAAS,GAAGI,CAAK,EAAE,CAAC,GAC3CS,IAASb,EAAK,WAAW,SAAS,GAAGM,CAAS,EAAE,CAAC,GAEjDQ,IAAc,MAAY;AAC9B,IAAA5B,EAAQqB,CAAa;AAAA,EAAA,GAGjBQ,IAAgB,CAACC,MAA8C;AACnE,IAAA7B,EAAU6B,CAAC;AAAA,EAAA,GAGPC,IAAkB,MAAY;AAClC,IAAI5B,KAAc6B,EAAY,KAC9B9B,EAAYH,CAAI;AAAA,EAAA;AAGlB;AAAA;AAAA;AAAA;AAAA,IAIE,gBAAAkC;AAAA,MAAC;AAAA,MAAA;AAAA,QACC,MAAK;AAAA,QACL,eAAY;AAAA,QACZ,KAAAjB;AAAA,QACA,SAASY;AAAA,QACT,UAAAL;AAAA,QACA,WAAWC;AAAA,QACX,YAAUP;AAAA,QACV,cAAYC,IAAQ;AAAA,QACpB,aAAWC;AAAA,QACX,cAAYE;AAAA,QACZ,cAAY,GAAGJ,CAAG,IAAIS,CAAQ,IAAIP,CAAI,IAAIQ,CAAM;AAAA,QAChD,iBAAe,EAAAvB;AAAA,QACf,UAAUD;AAAA,QACV,WAAW0B;AAAA,QACX,aAAatB,IAAiBwB,IAAkB;AAAA,QAC/C,UAAAd;AAAA,MAAA;AAAA,IACH;AAAA;AAEJ,GAEMiB,IAAMC,EAAWrC,CAAa;"}