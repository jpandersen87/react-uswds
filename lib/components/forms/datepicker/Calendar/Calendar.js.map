{"version":3,"file":"Calendar.js","sources":["../../../../../libSrc/components/forms/datepicker/Calendar/Calendar.tsx"],"sourcesContent":["import React, { useState, useRef, useEffect, type KeyboardEvent } from 'react'\n\nimport {\n  today,\n  addDays,\n  subMonths,\n  addMonths,\n  startOfMonth,\n  startOfWeek,\n  isSameDay,\n  isSameMonth,\n  isDateWithinMinAndMax,\n  subYears,\n  keepDateBetweenMinAndMax,\n  addYears,\n  listToTable,\n  setMonth,\n  setYear,\n  min,\n  max,\n  subDays,\n  subWeeks,\n  addWeeks,\n  endOfWeek,\n  handleTabKey,\n  type CalendarMode,\n  CalendarModes,\n} from '../utils.js'\n\nimport Day from '../Day/Day.js'\nimport MonthPicker from '../MonthPicker/MonthPicker.js'\nimport YearPicker from '../YearPicker/YearPicker.js'\n\nimport { type DatePickerLocalization, EN_US } from '../i18n.js'\nimport { FocusMode } from '../../../../utils/constants.js'\n\nexport interface CalendarProps {\n  date?: Date\n  selectedDate?: Date\n  handleSelectDate: (value: string) => void\n  minDate: Date\n  maxDate?: Date\n  rangeDate?: Date\n  setStatuses: (statuses: string[]) => void\n  focusMode: FocusMode\n  i18n?: DatePickerLocalization\n}\n\nconst Calendar = ({\n  date,\n  selectedDate,\n  handleSelectDate,\n  minDate,\n  maxDate,\n  rangeDate,\n  setStatuses,\n  focusMode,\n  i18n = EN_US,\n}: CalendarProps): React.ReactElement => {\n  const prevYearEl = useRef<HTMLButtonElement>(null)\n  const prevMonthEl = useRef<HTMLButtonElement>(null)\n  const nextMonthEl = useRef<HTMLButtonElement>(null)\n  const nextYearEl = useRef<HTMLButtonElement>(null)\n  const selectMonthEl = useRef<HTMLButtonElement>(null)\n  const selectYearEl = useRef<HTMLButtonElement>(null)\n  const focusedDayEl = useRef<HTMLButtonElement>(null)\n  const datePickerEl = useRef<HTMLDivElement>(null)\n\n  const [dateToDisplay, setDateToDisplay] = useState(date || today())\n  const [mode, setMode] = useState<CalendarMode>(CalendarModes.DATE_PICKER)\n  const [nextToFocus, setNextToFocus] = useState<\n    [HTMLButtonElement | null, HTMLDivElement | null]\n  >([null, null])\n\n  let calendarWasHidden = true\n\n  const handleSelectMonth = (monthIndex: number): void => {\n    let newDate = setMonth(dateToDisplay, monthIndex)\n    newDate = keepDateBetweenMinAndMax(newDate, minDate, maxDate)\n    setDateToDisplay(newDate)\n    setMode(CalendarModes.DATE_PICKER)\n  }\n\n  const handleSelectYear = (year: number): void => {\n    let newDate = setYear(dateToDisplay, year)\n    newDate = keepDateBetweenMinAndMax(newDate, minDate, maxDate)\n    setDateToDisplay(newDate)\n    setMode(CalendarModes.DATE_PICKER)\n  }\n\n  const focusedDate = addDays(dateToDisplay, 0)\n  const focusedMonth = dateToDisplay.getMonth()\n  const focusedYear = dateToDisplay.getFullYear()\n\n  const monthLabel = i18n.months[parseInt(`${focusedMonth}`)]\n  const dayOfWeekShortLabels = i18n.daysOfWeekShort\n  const dayOfWeekLabels = i18n.daysOfWeek\n  const backOneYear = i18n.backOneYear\n  const backOneMonth = i18n.backOneMonth\n  const selectMonth = `${monthLabel}. ${i18n.selectMonth}`\n  const selectYear = `${focusedYear}. ${i18n.selectYear}`\n  const forwardOneMonth = i18n.forwardOneMonth\n  const forwardOneYear = i18n.forwardOneYear\n\n  useEffect(() => {\n    calendarWasHidden = false\n  }, [])\n\n  useEffect(() => {\n    // Update displayed date when input changes (only if viewing date picker - otherwise an effect loop will occur)\n    if (date && mode === CalendarModes.DATE_PICKER) {\n      setDateToDisplay(date)\n    }\n  }, [date])\n\n  useEffect(() => {\n    if (focusMode !== FocusMode.Input) {\n      const [focusEl, fallbackFocusEl] = nextToFocus\n\n      if (focusEl && fallbackFocusEl) {\n        if (focusEl.disabled) {\n          fallbackFocusEl.focus()\n        } else {\n          focusEl.focus()\n        }\n        setNextToFocus([null, null])\n      } else {\n        // Focus on new date when it changes\n        const focusedDateEl =\n          datePickerEl.current &&\n          datePickerEl.current.querySelector<HTMLElement>(\n            '.usa-date-picker__calendar__date--focused'\n          )\n\n        if (focusedDateEl) {\n          focusedDateEl.focus()\n        }\n      }\n    }\n\n    if (calendarWasHidden) {\n      const newStatuses = [`${monthLabel} ${focusedYear}`]\n      if (selectedDate && isSameDay(focusedDate, selectedDate)) {\n        const selectedDateText = i18n.selectedDate\n        newStatuses.unshift(selectedDateText)\n      }\n      setStatuses(newStatuses)\n    }\n  }, [dateToDisplay])\n\n  if (mode === CalendarModes.MONTH_PICKER) {\n    return (\n      <MonthPicker\n        date={dateToDisplay}\n        minDate={minDate}\n        maxDate={maxDate}\n        handleSelectMonth={handleSelectMonth}\n        i18n={i18n}\n      />\n    )\n  } else if (mode === CalendarModes.YEAR_PICKER) {\n    return (\n      <YearPicker\n        date={dateToDisplay}\n        minDate={minDate}\n        maxDate={maxDate}\n        handleSelectYear={handleSelectYear}\n        setStatuses={setStatuses}\n      />\n    )\n  }\n\n  const prevMonth = subMonths(dateToDisplay, 1)\n  const nextMonth = addMonths(dateToDisplay, 1)\n\n  const firstOfMonth = startOfMonth(dateToDisplay)\n  const prevButtonsDisabled = isSameMonth(dateToDisplay, minDate)\n  const nextButtonsDisabled = maxDate && isSameMonth(dateToDisplay, maxDate)\n\n  const rangeConclusionDate = selectedDate || dateToDisplay\n  const rangeStartDate = rangeDate && min(rangeConclusionDate, rangeDate)\n  const rangeEndDate = rangeDate && max(rangeConclusionDate, rangeDate)\n\n  const withinRangeStartDate = rangeStartDate && addDays(rangeStartDate, 1)\n  const withinRangeEndDate = rangeEndDate && subDays(rangeEndDate, 1)\n\n  const handleDatePickerTab = (event: KeyboardEvent): void => {\n    handleTabKey(event, [\n      prevYearEl?.current,\n      prevMonthEl?.current,\n      selectMonthEl?.current,\n      selectYearEl?.current,\n      nextMonthEl?.current,\n      nextYearEl?.current,\n      focusedDayEl?.current,\n    ])\n  }\n\n  const handleKeyDownFromDay = (event: KeyboardEvent): void => {\n    let newDisplayDate\n    switch (event.key) {\n      case 'ArrowUp':\n      case 'Up':\n        newDisplayDate = subWeeks(dateToDisplay, 1)\n        break\n      case 'ArrowDown':\n      case 'Down':\n        newDisplayDate = addWeeks(dateToDisplay, 1)\n        break\n      case 'ArrowLeft':\n      case 'Left':\n        newDisplayDate = subDays(dateToDisplay, 1)\n        break\n      case 'ArrowRight':\n      case 'Right':\n        newDisplayDate = addDays(dateToDisplay, 1)\n        break\n      case 'Home':\n        newDisplayDate = startOfWeek(dateToDisplay)\n        break\n      case 'End':\n        newDisplayDate = endOfWeek(dateToDisplay)\n        break\n      case 'PageDown':\n        if (event.shiftKey) {\n          newDisplayDate = addYears(dateToDisplay, 1)\n        } else {\n          newDisplayDate = addMonths(dateToDisplay, 1)\n        }\n        break\n      case 'PageUp':\n        if (event.shiftKey) {\n          newDisplayDate = subYears(dateToDisplay, 1)\n        } else {\n          newDisplayDate = subMonths(dateToDisplay, 1)\n        }\n        break\n      default:\n        return\n    }\n\n    if (newDisplayDate !== undefined) {\n      const cappedDate = keepDateBetweenMinAndMax(\n        newDisplayDate,\n        minDate,\n        maxDate\n      )\n      if (!isSameDay(dateToDisplay, cappedDate)) {\n        setDateToDisplay(newDisplayDate)\n      }\n    }\n\n    event.preventDefault()\n  }\n\n  const handleMouseMoveFromDay = (hoverDate: Date): void => {\n    if (hoverDate === dateToDisplay) return\n    setDateToDisplay(hoverDate)\n  }\n\n  const handlePreviousYearClick = (): void => {\n    let newDate = subYears(dateToDisplay, 1)\n    newDate = keepDateBetweenMinAndMax(newDate, minDate, maxDate)\n    setDateToDisplay(newDate)\n    setNextToFocus([prevYearEl.current, datePickerEl.current])\n  }\n\n  const handlePreviousMonthClick = (): void => {\n    let newDate = subMonths(dateToDisplay, 1)\n    newDate = keepDateBetweenMinAndMax(newDate, minDate, maxDate)\n    setDateToDisplay(newDate)\n    setNextToFocus([prevMonthEl.current, datePickerEl.current])\n  }\n\n  const handleNextMonthClick = (): void => {\n    let newDate = addMonths(dateToDisplay, 1)\n    newDate = keepDateBetweenMinAndMax(newDate, minDate, maxDate)\n    setDateToDisplay(newDate)\n    setNextToFocus([nextMonthEl.current, datePickerEl.current])\n  }\n\n  const handleNextYearClick = (): void => {\n    let newDate = addYears(dateToDisplay, 1)\n    newDate = keepDateBetweenMinAndMax(newDate, minDate, maxDate)\n    setDateToDisplay(newDate)\n    setNextToFocus([nextYearEl.current, datePickerEl.current])\n  }\n\n  const handleToggleMonthSelection = (): void => {\n    setMode(CalendarModes.MONTH_PICKER)\n    const selectAMonth = i18n.selectAMonth\n    setStatuses([selectAMonth])\n  }\n\n  const handleToggleYearSelection = (): void => {\n    setMode(CalendarModes.YEAR_PICKER)\n  }\n\n  const days = []\n\n  let dateIterator = startOfWeek(firstOfMonth)\n  while (\n    days.length < 28 ||\n    dateIterator.getMonth() === focusedMonth ||\n    days.length % 7 !== 0\n  ) {\n    const isFocused = isSameDay(dateIterator, focusedDate)\n\n    days.push(\n      <Day\n        date={dateIterator}\n        onClick={handleSelectDate}\n        onKeyDown={handleKeyDownFromDay}\n        onMouseMove={handleMouseMoveFromDay}\n        ref={isFocused ? focusedDayEl : null}\n        isDisabled={!isDateWithinMinAndMax(dateIterator, minDate, maxDate)}\n        isSelected={selectedDate && isSameDay(dateIterator, selectedDate)}\n        isFocused={isFocused}\n        isPrevMonth={isSameMonth(dateIterator, prevMonth)}\n        isFocusedMonth={isSameMonth(dateIterator, focusedDate)}\n        isNextMonth={isSameMonth(dateIterator, nextMonth)}\n        isToday={isSameDay(dateIterator, today())}\n        isRangeDate={rangeDate && isSameDay(dateIterator, rangeDate)}\n        isRangeStart={rangeStartDate && isSameDay(dateIterator, rangeStartDate)}\n        isRangeEnd={rangeEndDate && isSameDay(dateIterator, rangeEndDate)}\n        isWithinRange={\n          withinRangeStartDate &&\n          withinRangeEndDate &&\n          isDateWithinMinAndMax(\n            dateIterator,\n            withinRangeStartDate,\n            withinRangeEndDate\n          )\n        }\n        i18n={i18n}\n      />\n    )\n    dateIterator = addDays(dateIterator, 1)\n  }\n\n  return (\n    // Ignoring error: \"Static HTML elements with event handlers require a role.\"\n    // Ignoring because this element does not have a role in the USWDS implementation (https://github.com/uswds/uswds/blob/develop/src/js/components/date-picker.js#L1042)\n    // eslint-disable-next-line jsx-a11y/no-static-element-interactions\n    <div\n      tabIndex={-1}\n      className=\"usa-date-picker__calendar__date-picker\"\n      data-testid=\"calendar-date-picker\"\n      ref={datePickerEl}\n      onKeyDown={handleDatePickerTab}>\n      <div className=\"usa-date-picker__calendar__row\">\n        <div className=\"usa-date-picker__calendar__cell usa-date-picker__calendar__cell--center-items\">\n          <button\n            type=\"button\"\n            data-testid=\"previous-year\"\n            onClick={handlePreviousYearClick}\n            ref={prevYearEl}\n            className=\"usa-date-picker__calendar__previous-year\"\n            aria-label={backOneYear}\n            disabled={prevButtonsDisabled}></button>\n        </div>\n        <div className=\"usa-date-picker__calendar__cell usa-date-picker__calendar__cell--center-items\">\n          <button\n            type=\"button\"\n            data-testid=\"previous-month\"\n            onClick={handlePreviousMonthClick}\n            ref={prevMonthEl}\n            className=\"usa-date-picker__calendar__previous-month\"\n            aria-label={backOneMonth}\n            disabled={prevButtonsDisabled}></button>\n        </div>\n        <div className=\"usa-date-picker__calendar__cell usa-date-picker__calendar__month-label\">\n          <button\n            type=\"button\"\n            data-testid=\"select-month\"\n            onClick={handleToggleMonthSelection}\n            ref={selectMonthEl}\n            className=\"usa-date-picker__calendar__month-selection\"\n            aria-label={selectMonth}>\n            {monthLabel}\n          </button>\n          <button\n            type=\"button\"\n            data-testid=\"select-year\"\n            onClick={handleToggleYearSelection}\n            ref={selectYearEl}\n            className=\"usa-date-picker__calendar__year-selection\"\n            aria-label={selectYear}>\n            {focusedYear}\n          </button>\n        </div>\n        <div className=\"usa-date-picker__calendar__cell usa-date-picker__calendar__cell--center-items\">\n          <button\n            type=\"button\"\n            data-testid=\"next-month\"\n            onClick={handleNextMonthClick}\n            ref={nextMonthEl}\n            className=\"usa-date-picker__calendar__next-month\"\n            aria-label={forwardOneMonth}\n            disabled={nextButtonsDisabled}></button>\n        </div>\n        <div className=\"usa-date-picker__calendar__cell usa-date-picker__calendar__cell--center-items\">\n          <button\n            type=\"button\"\n            data-testid=\"next-year\"\n            onClick={handleNextYearClick}\n            ref={nextYearEl}\n            className=\"usa-date-picker__calendar__next-year\"\n            aria-label={forwardOneYear}\n            disabled={nextButtonsDisabled}></button>\n        </div>\n      </div>\n      <table className=\"usa-date-picker__calendar__table\">\n        <thead>\n          <tr>\n            {dayOfWeekShortLabels.map((d, i) => (\n              <th\n                className=\"usa-date-picker__calendar__day-of-week\"\n                scope=\"col\"\n                aria-label={dayOfWeekLabels[parseInt(`${i}`)]}\n                key={`day-of-week-${d}-${i}`}>\n                {d}\n              </th>\n            ))}\n          </tr>\n        </thead>\n        <tbody>{listToTable(days, 7)}</tbody>\n      </table>\n    </div>\n  )\n}\n\nexport default Calendar\n"],"names":["Calendar","date","selectedDate","handleSelectDate","minDate","maxDate","rangeDate","setStatuses","focusMode","i18n","EN_US","prevYearEl","useRef","prevMonthEl","nextMonthEl","nextYearEl","selectMonthEl","selectYearEl","focusedDayEl","datePickerEl","dateToDisplay","setDateToDisplay","useState","today","mode","setMode","CalendarModes","nextToFocus","setNextToFocus","calendarWasHidden","handleSelectMonth","monthIndex","newDate","setMonth","keepDateBetweenMinAndMax","handleSelectYear","year","setYear","focusedDate","addDays","focusedMonth","focusedYear","monthLabel","dayOfWeekShortLabels","dayOfWeekLabels","backOneYear","backOneMonth","selectMonth","selectYear","forwardOneMonth","forwardOneYear","useEffect","FocusMode","focusEl","fallbackFocusEl","focusedDateEl","newStatuses","isSameDay","selectedDateText","jsx","MonthPicker","YearPicker","prevMonth","subMonths","nextMonth","addMonths","firstOfMonth","startOfMonth","prevButtonsDisabled","isSameMonth","nextButtonsDisabled","rangeConclusionDate","rangeStartDate","min","rangeEndDate","max","withinRangeStartDate","withinRangeEndDate","subDays","handleDatePickerTab","event","handleTabKey","handleKeyDownFromDay","newDisplayDate","subWeeks","addWeeks","startOfWeek","endOfWeek","addYears","subYears","cappedDate","handleMouseMoveFromDay","hoverDate","handlePreviousYearClick","handlePreviousMonthClick","handleNextMonthClick","handleNextYearClick","handleToggleMonthSelection","selectAMonth","handleToggleYearSelection","days","dateIterator","isFocused","Day","isDateWithinMinAndMax","jsxs","d","i","listToTable"],"mappings":"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"}