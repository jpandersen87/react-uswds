{"version":3,"file":"utils.js","sources":["../../../../../libSrc/components/forms/combobox/ComboBox/utils.ts"],"sourcesContent":["/* eslint-disable security/detect-non-literal-regexp, security/detect-object-injection */\n\nexport const DEFAULT_FILTER = '.*{{query}}.*'\n\n/**\n * Generate a dynamic regular expression based off of a replaceable and possibly filtered value.\n *\n * @param {string} filter The base filter to use. May be extended by `extras`.\n * @param {string} query The value to use in the regular expression\n * @param {object} extras An object of regular expressions to replace and filter the query\n */\nexport const generateDynamicRegExp = (\n  filter: string,\n  query = '',\n  extras: Record<string, string> = {}\n): RegExp => {\n  const escapeRegExp = (text: string): string => {\n    return text.replace(/[-[\\]{}()*+?.,\\\\^$|#\\s]/g, '\\\\$&')\n  }\n\n  let find = filter.replace(/{{(.*?)}}/g, (_m, $1: string): string => {\n    const key = $1.trim()\n    const queryFilter = extras[key]\n    if (key !== 'query' && queryFilter) {\n      const matcher = new RegExp(queryFilter, 'i')\n      const matches = query.match(matcher)\n\n      if (matches) {\n        return escapeRegExp(matches[1])\n      }\n\n      return ''\n    }\n    return escapeRegExp(query)\n  })\n\n  find = '^(?:' + find + ')$'\n\n  return new RegExp(find, 'i')\n}\n\nexport enum Direction {\n  Previous = -1,\n  Next = 1,\n}\n"],"names":["DEFAULT_FILTER","generateDynamicRegExp","filter","query","extras","escapeRegExp","text","find","_m","$1","key","queryFilter","matcher","matches","Direction"],"mappings":"AAEO,MAAMA,IAAiB,iBASjBC,IAAwB,CACnCC,GACAC,IAAQ,IACRC,IAAiC,CAAA,MACtB;AACL,QAAAC,IAAe,CAACC,MACbA,EAAK,QAAQ,4BAA4B,MAAM;AAGxD,MAAIC,IAAOL,EAAO,QAAQ,cAAc,CAACM,GAAIC,MAAuB;AAC5D,UAAAC,IAAMD,EAAG,QACTE,IAAcP,EAAOM,CAAG;AAC1B,QAAAA,MAAQ,WAAWC,GAAa;AAClC,YAAMC,IAAU,IAAI,OAAOD,GAAa,GAAG,GACrCE,IAAUV,EAAM,MAAMS,CAAO;AAEnC,aAAIC,IACKR,EAAaQ,EAAQ,CAAC,CAAC,IAGzB;AAAA,IACT;AACA,WAAOR,EAAaF,CAAK;AAAA,EAAA,CAC1B;AAED,SAAAI,IAAO,SAASA,IAAO,MAEhB,IAAI,OAAOA,GAAM,GAAG;AAC7B;AAEY,IAAAO,sBAAAA,OACVA,EAAAA,EAAA,WAAW,EAAX,IAAA,YACAA,EAAAA,EAAA,OAAO,CAAP,IAAA,QAFUA,IAAAA,KAAA,CAAA,CAAA;"}