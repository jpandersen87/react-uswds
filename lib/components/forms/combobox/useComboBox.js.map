{"version":3,"file":"useComboBox.js","sources":["../../../../libSrc/components/forms/combobox/useComboBox.ts"],"sourcesContent":["import React, { useReducer } from 'react'\nimport type { ComboBoxOption, CustomizableFilter } from './ComboBox/ComboBox.js'\nimport { generateDynamicRegExp } from './ComboBox/utils.js'\nimport { FocusMode } from '../../../utils/constants.js'\nimport { ActionTypes } from './constants.js'\n\nexport type Action =\n  | {\n      type: ActionTypes.SELECT_OPTION\n      option: ComboBoxOption\n    }\n  | {\n      type: ActionTypes.CLEAR\n    }\n  | {\n      type: ActionTypes.OPEN_LIST\n    }\n  | {\n      type: ActionTypes.CLOSE_LIST\n    }\n  | {\n      type: ActionTypes.FOCUS_OPTION\n      option: ComboBoxOption\n    }\n  | {\n      type: ActionTypes.UPDATE_FILTER\n      value: string\n    }\n  | {\n      type: ActionTypes.BLUR\n    }\n  | {\n      type: ActionTypes.CLEAR_SELECTION\n    }\n  | {\n      type: ActionTypes.FOCUS_INPUT\n    }\n\nexport interface State {\n  isOpen: boolean\n  selectedOption?: ComboBoxOption\n  focusedOption?: ComboBoxOption\n  focusMode: FocusMode\n  filteredOptions: ComboBoxOption[]\n  inputValue: string\n  statusText: string\n}\n\nexport interface FilterResults {\n  closestMatch: ComboBoxOption\n  optionsToDisplay: ComboBoxOption[]\n}\n\nconst useComboBox = (\n  initialState: State,\n  optionsList: ComboBoxOption[],\n  disableFiltering: boolean,\n  customizableFilter: CustomizableFilter\n): [State, React.Dispatch<Action>] => {\n  const getPotentialMatches = (needle: string): FilterResults => {\n    const regex = generateDynamicRegExp(\n      customizableFilter.filter,\n      needle,\n      customizableFilter.extras\n    )\n    const filteredOptions = optionsList.filter((option) =>\n      regex.test(option.label.toLowerCase())\n    )\n\n    if (disableFiltering) {\n      return {\n        closestMatch:\n          filteredOptions.length > 0 ? filteredOptions[0] : optionsList[0],\n        optionsToDisplay: optionsList,\n      }\n    }\n\n    return {\n      closestMatch: filteredOptions[0],\n      optionsToDisplay: filteredOptions,\n    }\n  }\n\n  const reducer = (state: State, action: Action): State => {\n    switch (action.type) {\n      case ActionTypes.SELECT_OPTION:\n        return {\n          ...state,\n          isOpen: false,\n          selectedOption: action.option,\n          focusMode: FocusMode.Input,\n          inputValue: action.option.label,\n          filteredOptions: optionsList,\n          focusedOption: action.option,\n          statusText: '',\n        }\n      case ActionTypes.UPDATE_FILTER: {\n        const { closestMatch, optionsToDisplay } = getPotentialMatches(\n          action.value\n        )\n\n        const newState = {\n          ...state,\n          isOpen: true,\n          filteredOptions: optionsToDisplay,\n          inputValue: action.value,\n          statusText: `${optionsToDisplay.length} result${\n            optionsToDisplay.length > 1 ? 's' : ''\n          } available.`,\n        }\n\n        if (optionsToDisplay.length < 1) {\n          newState.statusText = 'No results.'\n        }\n\n        if (disableFiltering || !state.selectedOption) {\n          newState.focusedOption = closestMatch\n        } else if (state.selectedOption) {\n          if (newState.filteredOptions.includes(state.selectedOption)) {\n            newState.focusedOption = state.selectedOption\n          } else {\n            newState.focusedOption = closestMatch\n          }\n        }\n\n        return newState\n      }\n      case ActionTypes.OPEN_LIST: {\n        const statusText = state.filteredOptions.length\n          ? `${state.filteredOptions.length} result${\n              state.filteredOptions.length > 1 ? 's' : ''\n            } available.`\n          : 'No results.'\n\n        return {\n          ...state,\n          isOpen: true,\n          focusMode: FocusMode.Input,\n          focusedOption:\n            state.selectedOption || state.focusedOption || optionsList[0],\n          statusText,\n        }\n      }\n      case ActionTypes.CLOSE_LIST: {\n        const newState = {\n          ...state,\n          isOpen: false,\n          focusMode: FocusMode.Input,\n          focusedOption: undefined,\n          statusText: '',\n        }\n\n        if (state.filteredOptions.length === 0) {\n          newState.filteredOptions = optionsList\n          newState.inputValue = ''\n        }\n\n        if (state.selectedOption) {\n          newState.inputValue = state.selectedOption.label\n        }\n\n        return newState\n      }\n\n      case ActionTypes.FOCUS_OPTION: {\n        const statusText = state.filteredOptions.length\n          ? `${state.filteredOptions.length} result${\n              state.filteredOptions.length > 1 ? 's' : ''\n            } available.`\n          : 'No results.'\n\n        return {\n          ...state,\n          isOpen: true,\n          focusedOption: action.option,\n          focusMode: FocusMode.Item,\n          statusText,\n        }\n      }\n      case ActionTypes.CLEAR:\n        return {\n          ...state,\n          inputValue: '',\n          isOpen: false,\n          focusMode: FocusMode.Input,\n          selectedOption: undefined,\n          filteredOptions: optionsList,\n          focusedOption: optionsList[0],\n          statusText: '',\n        }\n      case ActionTypes.BLUR: {\n        const newState = {\n          ...state,\n          isOpen: false,\n          focusMode: FocusMode.None,\n          filteredOptions: optionsList,\n          statusText: '',\n        }\n\n        if (!state.selectedOption) {\n          newState.inputValue = ''\n          newState.focusedOption = optionsList[0]\n        } else {\n          newState.inputValue = state.selectedOption.label\n          newState.focusedOption = state.selectedOption\n        }\n\n        return newState\n      }\n      case ActionTypes.CLEAR_SELECTION: {\n        return {\n          ...state,\n          inputValue: '',\n          isOpen: false,\n          focusMode: FocusMode.None,\n          selectedOption: undefined,\n          filteredOptions: optionsList,\n          focusedOption: undefined,\n          statusText: '',\n        }\n      }\n      case ActionTypes.FOCUS_INPUT: {\n        return {\n          ...state,\n          focusMode: FocusMode.Input,\n        }\n      }\n      default:\n        throw new Error()\n    }\n  }\n\n  return useReducer(reducer, initialState)\n}\n\nexport default useComboBox\n"],"names":["useComboBox","initialState","optionsList","disableFiltering","customizableFilter","getPotentialMatches","needle","regex","generateDynamicRegExp","filteredOptions","option","useReducer","state","action","ActionTypes","FocusMode","closestMatch","optionsToDisplay","newState","statusText"],"mappings":";;;;AAqDA,MAAMA,IAAc,CAClBC,GACAC,GACAC,GACAC,MACoC;AAC9B,QAAAC,IAAsB,CAACC,MAAkC;AAC7D,UAAMC,IAAQC;AAAA,MACZJ,EAAmB;AAAA,MACnBE;AAAA,MACAF,EAAmB;AAAA,IAAA,GAEfK,IAAkBP,EAAY;AAAA,MAAO,CAACQ,MAC1CH,EAAM,KAAKG,EAAO,MAAM,aAAa;AAAA,IAAA;AAGvC,WAAIP,IACK;AAAA,MACL,cACEM,EAAgB,SAAS,IAAIA,EAAgB,CAAC,IAAIP,EAAY,CAAC;AAAA,MACjE,kBAAkBA;AAAA,IAAA,IAIf;AAAA,MACL,cAAcO,EAAgB,CAAC;AAAA,MAC/B,kBAAkBA;AAAA,IAAA;AAAA,EACpB;AAwJK,SAAAE,EArJS,CAACC,GAAcC,MAA0B;AACvD,YAAQA,EAAO,MAAM;AAAA,MACnB,KAAKC,EAAY;AACR,eAAA;AAAA,UACL,GAAGF;AAAA,UACH,QAAQ;AAAA,UACR,gBAAgBC,EAAO;AAAA,UACvB,WAAWE,EAAU;AAAA,UACrB,YAAYF,EAAO,OAAO;AAAA,UAC1B,iBAAiBX;AAAA,UACjB,eAAeW,EAAO;AAAA,UACtB,YAAY;AAAA,QAAA;AAAA,MAEhB,KAAKC,EAAY,eAAe;AACxB,cAAA,EAAE,cAAAE,GAAc,kBAAAC,EAAA,IAAqBZ;AAAA,UACzCQ,EAAO;AAAA,QAAA,GAGHK,IAAW;AAAA,UACf,GAAGN;AAAA,UACH,QAAQ;AAAA,UACR,iBAAiBK;AAAA,UACjB,YAAYJ,EAAO;AAAA,UACnB,YAAY,GAAGI,EAAiB,MAAM,UACpCA,EAAiB,SAAS,IAAI,MAAM,EACtC;AAAA,QAAA;AAGE,eAAAA,EAAiB,SAAS,MAC5BC,EAAS,aAAa,gBAGpBf,KAAoB,CAACS,EAAM,iBAC7BM,EAAS,gBAAgBF,IAChBJ,EAAM,mBACXM,EAAS,gBAAgB,SAASN,EAAM,cAAc,IACxDM,EAAS,gBAAgBN,EAAM,iBAE/BM,EAAS,gBAAgBF,IAItBE;AAAA,MACT;AAAA,MACA,KAAKJ,EAAY,WAAW;AAC1B,cAAMK,IAAaP,EAAM,gBAAgB,SACrC,GAAGA,EAAM,gBAAgB,MAAM,UAC7BA,EAAM,gBAAgB,SAAS,IAAI,MAAM,EAC3C,gBACA;AAEG,eAAA;AAAA,UACL,GAAGA;AAAA,UACH,QAAQ;AAAA,UACR,WAAWG,EAAU;AAAA,UACrB,eACEH,EAAM,kBAAkBA,EAAM,iBAAiBV,EAAY,CAAC;AAAA,UAC9D,YAAAiB;AAAA,QAAA;AAAA,MAEJ;AAAA,MACA,KAAKL,EAAY,YAAY;AAC3B,cAAMI,IAAW;AAAA,UACf,GAAGN;AAAA,UACH,QAAQ;AAAA,UACR,WAAWG,EAAU;AAAA,UACrB,eAAe;AAAA,UACf,YAAY;AAAA,QAAA;AAGV,eAAAH,EAAM,gBAAgB,WAAW,MACnCM,EAAS,kBAAkBhB,GAC3BgB,EAAS,aAAa,KAGpBN,EAAM,mBACCM,EAAA,aAAaN,EAAM,eAAe,QAGtCM;AAAA,MACT;AAAA,MAEA,KAAKJ,EAAY,cAAc;AAC7B,cAAMK,IAAaP,EAAM,gBAAgB,SACrC,GAAGA,EAAM,gBAAgB,MAAM,UAC7BA,EAAM,gBAAgB,SAAS,IAAI,MAAM,EAC3C,gBACA;AAEG,eAAA;AAAA,UACL,GAAGA;AAAA,UACH,QAAQ;AAAA,UACR,eAAeC,EAAO;AAAA,UACtB,WAAWE,EAAU;AAAA,UACrB,YAAAI;AAAA,QAAA;AAAA,MAEJ;AAAA,MACA,KAAKL,EAAY;AACR,eAAA;AAAA,UACL,GAAGF;AAAA,UACH,YAAY;AAAA,UACZ,QAAQ;AAAA,UACR,WAAWG,EAAU;AAAA,UACrB,gBAAgB;AAAA,UAChB,iBAAiBb;AAAA,UACjB,eAAeA,EAAY,CAAC;AAAA,UAC5B,YAAY;AAAA,QAAA;AAAA,MAEhB,KAAKY,EAAY,MAAM;AACrB,cAAMI,IAAW;AAAA,UACf,GAAGN;AAAA,UACH,QAAQ;AAAA,UACR,WAAWG,EAAU;AAAA,UACrB,iBAAiBb;AAAA,UACjB,YAAY;AAAA,QAAA;AAGV,eAACU,EAAM,kBAIAM,EAAA,aAAaN,EAAM,eAAe,OAC3CM,EAAS,gBAAgBN,EAAM,mBAJ/BM,EAAS,aAAa,IACbA,EAAA,gBAAgBhB,EAAY,CAAC,IAMjCgB;AAAA,MACT;AAAA,MACA,KAAKJ,EAAY;AACR,eAAA;AAAA,UACL,GAAGF;AAAA,UACH,YAAY;AAAA,UACZ,QAAQ;AAAA,UACR,WAAWG,EAAU;AAAA,UACrB,gBAAgB;AAAA,UAChB,iBAAiBb;AAAA,UACjB,eAAe;AAAA,UACf,YAAY;AAAA,QAAA;AAAA,MAGhB,KAAKY,EAAY;AACR,eAAA;AAAA,UACL,GAAGF;AAAA,UACH,WAAWG,EAAU;AAAA,QAAA;AAAA,MAGzB;AACE,cAAM,IAAI,MAAM;AAAA,IACpB;AAAA,EAAA,GAGyBd,CAAY;AACzC;"}