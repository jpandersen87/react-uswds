{"version":3,"file":"FilePreview.js","sources":["../../../../../libSrc/components/forms/fileinput/FilePreview/FilePreview.tsx"],"sourcesContent":["import React, { useEffect, useRef, useState } from 'react'\nimport classnames from 'classnames'\nimport { SPACER_GIF } from '../../../../utils/constants.js'\n\nexport type FilePreviewProps = {\n  imageId: string\n  file: File\n} & JSX.IntrinsicElements['div']\n\nconst FilePreview = ({\n  imageId,\n  file,\n  ...props\n}: FilePreviewProps): React.ReactElement => {\n  const fileReaderRef = useRef<FileReader>(new FileReader())\n  const [isLoading, setIsLoading] = useState(true)\n  const [previewSrc, setPreviewSrc] = useState(SPACER_GIF)\n  const [showGenericPreview, setShowGenericPreview] = useState(false)\n\n  useEffect(() => {\n    fileReaderRef.current.onloadend = (): void => {\n      setIsLoading(false)\n      setPreviewSrc(fileReaderRef.current.result as string)\n    }\n\n    fileReaderRef.current.readAsDataURL(file)\n\n    return (): void => {\n      fileReaderRef.current.onloadend = null\n    }\n  }, [])\n\n  const { name } = file\n\n  const onImageError = (): void => {\n    setPreviewSrc(SPACER_GIF)\n    setShowGenericPreview(true)\n  }\n\n  const isPDF = name.indexOf('.pdf') > 0\n  const isWord = name.indexOf('.doc') > 0 || name.indexOf('.pages') > 0\n  const isVideo = name.indexOf('.mov') > 0 || name.indexOf('.mp4') > 0\n  const isExcel = name.indexOf('.xls') > 0 || name.indexOf('.numbers') > 0\n  const isGeneric = !isPDF && !isWord && !isVideo && !isExcel\n\n  const imageClasses = classnames('usa-file-input__preview-image', {\n    'is-loading': isLoading,\n    'usa-file-input__preview-image--pdf': showGenericPreview && isPDF,\n    'usa-file-input__preview-image--word': showGenericPreview && isWord,\n    'usa-file-input__preview-image--video': showGenericPreview && isVideo,\n    'usa-file-input__preview-image--excel': showGenericPreview && isExcel,\n    'usa-file-input__preview-image--generic': showGenericPreview && isGeneric,\n  })\n\n  return (\n    <div\n      data-testid=\"file-input-preview\"\n      className=\"usa-file-input__preview\"\n      aria-hidden=\"true\"\n      {...props}>\n      <img\n        id={imageId}\n        data-testid=\"file-input-preview-image\"\n        src={previewSrc}\n        alt=\"\"\n        className={imageClasses}\n        onError={onImageError}\n      />\n      {name}\n    </div>\n  )\n}\n\nexport default FilePreview\n"],"names":["FilePreview","imageId","file","props","fileReaderRef","useRef","isLoading","setIsLoading","useState","previewSrc","setPreviewSrc","SPACER_GIF","showGenericPreview","setShowGenericPreview","useEffect","name","onImageError","isPDF","isWord","isVideo","isExcel","imageClasses","classnames","jsxs","jsx"],"mappings":";;;;AASA,MAAMA,IAAc,CAAC;AAAA,EACnB,SAAAC;AAAA,EACA,MAAAC;AAAA,EACA,GAAGC;AACL,MAA4C;AAC1C,QAAMC,IAAgBC,EAAmB,IAAI,WAAY,CAAA,GACnD,CAACC,GAAWC,CAAY,IAAIC,EAAS,EAAI,GACzC,CAACC,GAAYC,CAAa,IAAIF,EAASG,CAAU,GACjD,CAACC,GAAoBC,CAAqB,IAAIL,EAAS,EAAK;AAElE,EAAAM,EAAU,OACMV,EAAA,QAAQ,YAAY,MAAY;AAC5C,IAAAG,EAAa,EAAK,GACJG,EAAAN,EAAc,QAAQ,MAAgB;AAAA,EAAA,GAGxCA,EAAA,QAAQ,cAAcF,CAAI,GAEjC,MAAY;AACjB,IAAAE,EAAc,QAAQ,YAAY;AAAA,EAAA,IAEnC,CAAE,CAAA;AAEC,QAAA,EAAE,MAAAW,EAAS,IAAAb,GAEXc,IAAe,MAAY;AAC/B,IAAAN,EAAcC,CAAU,GACxBE,EAAsB,EAAI;AAAA,EAAA,GAGtBI,IAAQF,EAAK,QAAQ,MAAM,IAAI,GAC/BG,IAASH,EAAK,QAAQ,MAAM,IAAI,KAAKA,EAAK,QAAQ,QAAQ,IAAI,GAC9DI,IAAUJ,EAAK,QAAQ,MAAM,IAAI,KAAKA,EAAK,QAAQ,MAAM,IAAI,GAC7DK,IAAUL,EAAK,QAAQ,MAAM,IAAI,KAAKA,EAAK,QAAQ,UAAU,IAAI,GAGjEM,IAAeC,EAAW,iCAAiC;AAAA,IAC/D,cAAchB;AAAA,IACd,sCAAsCM,KAAsBK;AAAA,IAC5D,uCAAuCL,KAAsBM;AAAA,IAC7D,wCAAwCN,KAAsBO;AAAA,IAC9D,wCAAwCP,KAAsBQ;AAAA,IAC9D,0CAA0CR,MAR1B,CAACK,KAAS,CAACC,KAAU,CAACC,KAAW,CAACC;AAAA,EAQc,CACjE;AAGC,SAAA,gBAAAG;AAAA,IAAC;AAAA,IAAA;AAAA,MACC,eAAY;AAAA,MACZ,WAAU;AAAA,MACV,eAAY;AAAA,MACX,GAAGpB;AAAA,MACJ,UAAA;AAAA,QAAA,gBAAAqB;AAAA,UAAC;AAAA,UAAA;AAAA,YACC,IAAIvB;AAAA,YACJ,eAAY;AAAA,YACZ,KAAKQ;AAAA,YACL,KAAI;AAAA,YACJ,WAAWY;AAAA,YACX,SAASL;AAAA,UAAA;AAAA,QACX;AAAA,QACCD;AAAA,MAAA;AAAA,IAAA;AAAA,EAAA;AAGP;"}