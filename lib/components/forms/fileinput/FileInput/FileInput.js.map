{"version":3,"file":"FileInput.js","sources":["../../../../../libSrc/components/forms/fileinput/FileInput/FileInput.tsx"],"sourcesContent":["import React, {\n  useState,\n  forwardRef,\n  useRef,\n  useImperativeHandle,\n  useEffect,\n} from 'react'\nimport classnames from 'classnames'\n\nimport FilePreview from '../FilePreview/FilePreview.js'\nimport { makeSafeForID } from '../utils.js'\n\nexport type FileInputProps = {\n  id: string\n  name: string\n  dragText?: string\n  chooseText?: string\n  errorText?: string\n  disabled?: boolean\n  multiple?: boolean\n  accept?: string\n  onChange?: (e: React.ChangeEvent<HTMLInputElement>) => void\n  onDrop?: (e: React.DragEvent) => void\n} & JSX.IntrinsicElements['input']\n\nexport type FileInputRef = {\n  clearFiles: () => void\n  input: HTMLInputElement | null\n  files: File[]\n}\n\nexport const FileInputForwardRef: React.ForwardRefRenderFunction<\n  FileInputRef,\n  FileInputProps\n> = (\n  {\n    name,\n    id,\n    dragText,\n    chooseText,\n    errorText,\n    disabled,\n    multiple,\n    className,\n    accept,\n    onChange,\n    onDrop,\n    ...inputProps\n  },\n  ref\n): React.ReactElement => {\n  const internalRef = useRef<HTMLInputElement>(null)\n  const [isDragging, setIsDragging] = useState(false)\n  const [showError, setShowError] = useState(false)\n  const [files, setFiles] = useState<File[]>([])\n  const [hideDragText, setHideDragText] = useState(false)\n\n  useEffect(() => {\n    if (typeof navigator === 'undefined') return\n\n    const hideDragText =\n      /rv:11.0/i.test(navigator?.userAgent) ||\n      /Edge\\/\\d./i.test(navigator?.userAgent)\n\n    setHideDragText(hideDragText)\n  }, [typeof navigator])\n\n  useImperativeHandle(\n    ref,\n    () => ({\n      input: internalRef.current,\n      clearFiles: (): void => setFiles([]),\n      files,\n    }),\n    [files]\n  )\n\n  const fileInputClasses = classnames(\n    'usa-file-input',\n    {\n      'usa-file-input--disabled': disabled,\n    },\n    className\n  )\n\n  const targetClasses = classnames('usa-file-input__target', {\n    'usa-file-input--drag': isDragging,\n    'has-invalid-file': showError,\n  })\n\n  const defaultDragText = multiple\n    ? 'Drag files here or '\n    : 'Drag file here or '\n  const defaultChooseText = 'choose from folder'\n  const defaultErrorText = 'This is not a valid file type.'\n\n  const filePreviews = []\n  if (files) {\n    for (let i = 0; i < files?.length; i++) {\n      const imageId = makeSafeForID(files[parseInt(`${i}`)].name)\n      const key = `filePreview_${imageId}`\n      filePreviews.push(\n        <FilePreview\n          key={key}\n          imageId={imageId}\n          file={files[parseInt(`${i}`)]}\n        />\n      )\n    }\n  }\n\n  const instructionClasses = classnames('usa-file-input__instructions', {\n    'display-none': filePreviews.length > 0,\n  })\n\n  const previewHeaderText =\n    filePreviews.length > 1\n      ? `${filePreviews.length} files selected`\n      : 'Selected file'\n\n  const preventInvalidFiles = (e: React.DragEvent): void => {\n    setShowError(false)\n\n    if (accept) {\n      const acceptedTypes = accept.split(',')\n      let allFilesAllowed = true\n      for (let i = 0; i < e.dataTransfer.files.length; i += 1) {\n        const file = e.dataTransfer.files[parseInt(`${i}`)]\n        if (allFilesAllowed) {\n          for (let j = 0; j < acceptedTypes.length; j += 1) {\n            const fileType = acceptedTypes[parseInt(`${j}`)]\n            allFilesAllowed =\n              file.name.indexOf(fileType) > 0 ||\n              file.type.includes(fileType.replace(/\\*/g, ''))\n            if (allFilesAllowed) break\n          }\n        } else break\n      }\n\n      if (!allFilesAllowed) {\n        setFiles([])\n        setShowError(true)\n        e.preventDefault()\n        e.stopPropagation()\n      }\n    }\n  }\n\n  // Event handlers\n  const handleDragOver = (): void => setIsDragging(true)\n  const handleDragLeave = (): void => setIsDragging(false)\n  const handleDrop = (e: React.DragEvent): void => {\n    preventInvalidFiles(e)\n    setIsDragging(false)\n    if (onDrop) onDrop(e)\n  }\n\n  const handleChange = (e: React.ChangeEvent<HTMLInputElement>): void => {\n    setShowError(false)\n\n    // Map input FileList to array of Files\n    const fileArr = []\n    if (e.target?.files?.length) {\n      const fileLength = e.target?.files?.length || 0\n\n      for (let i = 0; i < fileLength; i++) {\n        const file = e.target.files.item(i)\n        if (file) fileArr.push(file)\n      }\n    }\n    setFiles(fileArr)\n\n    if (onChange) onChange(e)\n  }\n\n  return (\n    <div\n      data-testid=\"file-input\"\n      className={fileInputClasses}\n      aria-disabled={disabled}>\n      <div\n        data-testid=\"file-input-droptarget\"\n        className={targetClasses}\n        onDragOver={handleDragOver}\n        onDragLeave={handleDragLeave}\n        onDrop={handleDrop}>\n        {filePreviews.length > 0 && (\n          <div\n            data-testid=\"file-input-preview-heading\"\n            className=\"usa-file-input__preview-heading\">\n            {previewHeaderText}{' '}\n            <span className=\"usa-file-input__choose\">\n              Change file{filePreviews.length > 1 && 's'}\n            </span>\n          </div>\n        )}\n        <div\n          data-testid=\"file-input-instructions\"\n          className={instructionClasses}\n          aria-hidden=\"true\">\n          {!hideDragText && (\n            <span className=\"usa-file-input__drag-text\">\n              {dragText || defaultDragText}\n            </span>\n          )}\n          <span className=\"usa-file-input__choose\">\n            {chooseText || defaultChooseText}\n          </span>\n        </div>\n        {filePreviews}\n        <div data-testid=\"file-input-box\" className=\"usa-file-input__box\"></div>\n        {showError && (\n          <div\n            data-testid=\"file-input-error\"\n            className=\"usa-file-input__accepted-files-message\">\n            {errorText || defaultErrorText}\n          </div>\n        )}\n        <input\n          {...inputProps}\n          ref={internalRef}\n          type=\"file\"\n          data-testid=\"file-input-input\"\n          name={name}\n          id={id}\n          className=\"usa-file-input__input\"\n          disabled={disabled}\n          onChange={handleChange}\n          multiple={multiple}\n          accept={accept}\n        />\n      </div>\n    </div>\n  )\n}\n\nconst FileInput = forwardRef(FileInputForwardRef)\n\nexport default FileInput\n"],"names":["FileInputForwardRef","name","id","dragText","chooseText","errorText","disabled","multiple","className","accept","onChange","onDrop","inputProps","ref","internalRef","useRef","isDragging","setIsDragging","useState","showError","setShowError","files","setFiles","hideDragText","setHideDragText","useEffect","useImperativeHandle","fileInputClasses","classnames","targetClasses","defaultDragText","defaultChooseText","defaultErrorText","filePreviews","i","imageId","makeSafeForID","key","jsx","FilePreview","instructionClasses","previewHeaderText","preventInvalidFiles","acceptedTypes","allFilesAllowed","file","j","fileType","handleDragOver","handleDragLeave","handleDrop","handleChange","fileArr","_b","_a","fileLength","_d","_c","jsxs","FileInput","forwardRef"],"mappings":"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"}